2025-10-18 19:32:29,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:32:29,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:32:29,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:32:29,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:33:51,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:33:51,952:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:33:51,952:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:33:51,952:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:33:52,422:INFO:PyCaret RegressionExperiment
2025-10-18 19:33:52,423:INFO:Logging name: reg-default-name
2025-10-18 19:33:52,423:INFO:ML Usecase: MLUsecase.REGRESSION
2025-10-18 19:33:52,423:INFO:version 3.3.2
2025-10-18 19:33:52,423:INFO:Initializing setup()
2025-10-18 19:33:52,423:INFO:self.USI: e918
2025-10-18 19:33:52,423:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', 'memory', 'gpu_param', 'fold_shuffle_param', 'idx', '_available_plots', 'gpu_n_jobs_param', 'exp_name_log', 'X_test', 'exp_id', '_ml_usecase', 'logging_param', 'html_param', 'pipeline', 'y_train', 'X_train', 'X', 'log_plots_param', 'y_test', 'transform_target_param', 'n_jobs_param', 'fold_generator', 'seed', 'USI', 'target_param'}
2025-10-18 19:33:52,423:INFO:Checking environment
2025-10-18 19:33:52,424:INFO:python_version: 3.11.13
2025-10-18 19:33:52,424:INFO:python_build: ('main', 'Jun  4 2025 14:39:58')
2025-10-18 19:33:52,424:INFO:machine: AMD64
2025-10-18 19:33:52,424:INFO:platform: Windows-10-10.0.19045-SP0
2025-10-18 19:33:52,427:INFO:Memory: svmem(total=8528990208, available=2251640832, percent=73.6, used=6277349376, free=2251640832)
2025-10-18 19:33:52,428:INFO:Physical Core: 4
2025-10-18 19:33:52,428:INFO:Logical Core: 4
2025-10-18 19:33:52,428:INFO:Checking libraries
2025-10-18 19:33:52,428:INFO:System:
2025-10-18 19:33:52,428:INFO:    python: 3.11.13 | packaged by conda-forge | (main, Jun  4 2025, 14:39:58) [MSC v.1943 64 bit (AMD64)]
2025-10-18 19:33:52,428:INFO:executable: C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\python.exe
2025-10-18 19:33:52,428:INFO:   machine: Windows-10-10.0.19045-SP0
2025-10-18 19:33:52,428:INFO:PyCaret required dependencies:
2025-10-18 19:33:54,047:INFO:                 pip: 25.2
2025-10-18 19:33:54,047:INFO:          setuptools: 80.9.0
2025-10-18 19:33:54,047:INFO:             pycaret: 3.3.2
2025-10-18 19:33:54,048:INFO:             IPython: 9.5.0
2025-10-18 19:33:54,048:INFO:          ipywidgets: 7.8.5
2025-10-18 19:33:54,048:INFO:                tqdm: 4.67.1
2025-10-18 19:33:54,048:INFO:               numpy: 1.25.2
2025-10-18 19:33:54,048:INFO:              pandas: 2.1.4
2025-10-18 19:33:54,048:INFO:              jinja2: 3.1.6
2025-10-18 19:33:54,048:INFO:               scipy: 1.11.4
2025-10-18 19:33:54,048:INFO:              joblib: 1.3.2
2025-10-18 19:33:54,048:INFO:             sklearn: 1.4.2
2025-10-18 19:33:54,048:INFO:                pyod: 1.1.3
2025-10-18 19:33:54,048:INFO:            imblearn: 0.14.0
2025-10-18 19:33:54,048:INFO:   category_encoders: 2.7.0
2025-10-18 19:33:54,048:INFO:            lightgbm: 4.6.0
2025-10-18 19:33:54,048:INFO:               numba: 0.61.0
2025-10-18 19:33:54,048:INFO:            requests: 2.32.5
2025-10-18 19:33:54,048:INFO:          matplotlib: 3.8.4
2025-10-18 19:33:54,048:INFO:          scikitplot: 0.3.7
2025-10-18 19:33:54,048:INFO:         yellowbrick: 1.5
2025-10-18 19:33:54,048:INFO:              plotly: 5.24.1
2025-10-18 19:33:54,049:INFO:    plotly-resampler: Not installed
2025-10-18 19:33:54,049:INFO:             kaleido: 1.1.0
2025-10-18 19:33:54,049:INFO:           schemdraw: 0.15
2025-10-18 19:33:54,049:INFO:         statsmodels: 0.14.5
2025-10-18 19:33:54,049:INFO:              sktime: 0.26.0
2025-10-18 19:33:54,049:INFO:               tbats: 1.1.3
2025-10-18 19:33:54,049:INFO:            pmdarima: 2.0.4
2025-10-18 19:33:54,049:INFO:              psutil: 7.0.0
2025-10-18 19:33:54,049:INFO:          markupsafe: 3.0.2
2025-10-18 19:33:54,049:INFO:             pickle5: Not installed
2025-10-18 19:33:54,049:INFO:         cloudpickle: 3.1.1
2025-10-18 19:33:54,049:INFO:         deprecation: 2.1.0
2025-10-18 19:33:54,049:INFO:              xxhash: 3.5.0
2025-10-18 19:33:54,049:INFO:           wurlitzer: Not installed
2025-10-18 19:33:54,049:INFO:PyCaret optional dependencies:
2025-10-18 19:34:00,133:INFO:                shap: 0.44.1
2025-10-18 19:34:00,133:INFO:           interpret: 0.7.2
2025-10-18 19:34:00,133:INFO:                umap: 0.5.3
2025-10-18 19:34:00,133:INFO:     ydata_profiling: 4.16.1
2025-10-18 19:34:00,133:INFO:  explainerdashboard: 0.5.1
2025-10-18 19:34:00,133:INFO:             autoviz: Not installed
2025-10-18 19:34:00,134:INFO:           fairlearn: 0.7.0
2025-10-18 19:34:00,134:INFO:          deepchecks: Not installed
2025-10-18 19:34:00,134:INFO:             xgboost: 2.0.3
2025-10-18 19:34:00,134:INFO:            catboost: 1.2.8
2025-10-18 19:34:00,134:INFO:              kmodes: 0.12.2
2025-10-18 19:34:00,134:INFO:             mlxtend: 0.23.4
2025-10-18 19:34:00,134:INFO:       statsforecast: 1.5.0
2025-10-18 19:34:00,134:INFO:        tune_sklearn: Not installed
2025-10-18 19:34:00,134:INFO:                 ray: Not installed
2025-10-18 19:34:00,134:INFO:            hyperopt: 0.2.7
2025-10-18 19:34:00,134:INFO:              optuna: 4.5.0
2025-10-18 19:34:00,134:INFO:               skopt: 0.10.2
2025-10-18 19:34:00,134:INFO:              mlflow: 3.2.0
2025-10-18 19:34:00,134:INFO:              gradio: 5.46.0
2025-10-18 19:34:00,134:INFO:             fastapi: 0.116.1
2025-10-18 19:34:00,134:INFO:             uvicorn: 0.35.0
2025-10-18 19:34:00,134:INFO:              m2cgen: 0.10.0
2025-10-18 19:34:00,134:INFO:           evidently: 0.4.40
2025-10-18 19:34:00,134:INFO:               fugue: 0.8.7
2025-10-18 19:34:00,135:INFO:           streamlit: 1.48.1
2025-10-18 19:34:00,135:INFO:             prophet: Not installed
2025-10-18 19:34:00,135:INFO:None
2025-10-18 19:34:00,135:INFO:Set up data.
2025-10-18 19:34:00,141:INFO:Set up folding strategy.
2025-10-18 19:34:00,142:INFO:Set up train/test split.
2025-10-18 19:34:00,146:INFO:Set up index.
2025-10-18 19:34:00,146:INFO:Assigning column types.
2025-10-18 19:34:00,149:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-18 19:34:00,149:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,154:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,159:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,231:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,284:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,285:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:34:00,288:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:34:00,339:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,344:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,349:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,407:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,453:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,453:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:34:00,456:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:34:00,457:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-10-18 19:34:00,463:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,468:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,533:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,582:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,582:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:34:00,586:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:34:00,592:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,597:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,661:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,709:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,709:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:34:00,712:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:34:00,713:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-10-18 19:34:00,722:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,784:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,832:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,832:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:34:00,835:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:34:00,846:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,910:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,957:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:34:00,957:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:34:00,960:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:34:00,962:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-10-18 19:34:01,029:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:34:01,076:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:34:01,076:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:34:01,079:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:34:01,150:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:34:01,196:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:34:01,196:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:34:01,199:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:34:01,199:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-18 19:34:01,267:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:34:01,314:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:34:01,317:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:34:01,384:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:34:01,430:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:34:01,433:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:34:01,434:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-10-18 19:34:01,546:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:34:01,548:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:34:01,660:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:34:01,663:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:34:01,665:INFO:Preparing preprocessing pipeline...
2025-10-18 19:34:01,665:INFO:Set up simple imputation.
2025-10-18 19:34:01,668:INFO:Set up encoding of ordinal features.
2025-10-18 19:34:01,670:INFO:Set up encoding of categorical features.
2025-10-18 19:34:01,744:INFO:Finished creating preprocessing pipeline.
2025-10-18 19:34:01,781:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Kond\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-10-18 19:34:01,782:INFO:Creating final display dataframe.
2025-10-18 19:34:01,993:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              e918
2025-10-18 19:34:02,122:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:34:02,127:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:34:02,247:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:34:02,249:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:34:02,250:INFO:setup() successfully completed in 9.83s...............
2025-10-18 19:34:02,250:INFO:Initializing compare_models()
2025-10-18 19:34:02,251:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=False, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': False, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-10-18 19:34:02,251:INFO:Checking exceptions
2025-10-18 19:34:02,252:INFO:Preparing display monitor
2025-10-18 19:34:02,255:INFO:Initializing Linear Regression
2025-10-18 19:34:02,255:INFO:Total runtime is 0.0 minutes
2025-10-18 19:34:02,255:INFO:SubProcess create_model() called ==================================
2025-10-18 19:34:02,256:INFO:Initializing create_model()
2025-10-18 19:34:02,256:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:34:02,256:INFO:Checking exceptions
2025-10-18 19:34:02,256:INFO:Importing libraries
2025-10-18 19:34:02,256:INFO:Copying training dataset
2025-10-18 19:34:02,259:INFO:Defining folds
2025-10-18 19:34:02,259:INFO:Declaring metric variables
2025-10-18 19:34:02,260:INFO:Importing untrained model
2025-10-18 19:34:02,260:INFO:Linear Regression Imported successfully
2025-10-18 19:34:02,260:INFO:Starting cross validation
2025-10-18 19:34:02,272:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:34:08,738:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:34:08,750:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:34:08,750:INFO:Initializing create_model()
2025-10-18 19:34:08,750:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:34:08,751:INFO:Checking exceptions
2025-10-18 19:34:08,751:INFO:Importing libraries
2025-10-18 19:34:08,751:INFO:Copying training dataset
2025-10-18 19:34:08,755:INFO:Defining folds
2025-10-18 19:34:08,756:INFO:Declaring metric variables
2025-10-18 19:34:08,756:INFO:Importing untrained model
2025-10-18 19:34:08,757:INFO:Linear Regression Imported successfully
2025-10-18 19:34:08,759:INFO:Starting cross validation
2025-10-18 19:34:08,762:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:34:16,172:ERROR:create_model() for lr raised an exception or returned all 0.0:
2025-10-18 19:34:16,183:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:34:16,184:INFO:Initializing Lasso Regression
2025-10-18 19:34:16,184:INFO:Total runtime is 0.2321497877438863 minutes
2025-10-18 19:34:16,184:INFO:SubProcess create_model() called ==================================
2025-10-18 19:34:16,184:INFO:Initializing create_model()
2025-10-18 19:34:16,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:34:16,185:INFO:Checking exceptions
2025-10-18 19:34:16,185:INFO:Importing libraries
2025-10-18 19:34:16,185:INFO:Copying training dataset
2025-10-18 19:34:16,189:INFO:Defining folds
2025-10-18 19:34:16,189:INFO:Declaring metric variables
2025-10-18 19:34:16,189:INFO:Importing untrained model
2025-10-18 19:34:16,189:INFO:Lasso Regression Imported successfully
2025-10-18 19:34:16,190:INFO:Starting cross validation
2025-10-18 19:34:16,192:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:34:21,957:WARNING:create_model() for lasso raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:34:21,962:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:34:21,962:INFO:Initializing create_model()
2025-10-18 19:34:21,962:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:34:21,962:INFO:Checking exceptions
2025-10-18 19:34:21,962:INFO:Importing libraries
2025-10-18 19:34:21,962:INFO:Copying training dataset
2025-10-18 19:34:21,967:INFO:Defining folds
2025-10-18 19:34:21,967:INFO:Declaring metric variables
2025-10-18 19:34:21,967:INFO:Importing untrained model
2025-10-18 19:34:21,967:INFO:Lasso Regression Imported successfully
2025-10-18 19:34:21,968:INFO:Starting cross validation
2025-10-18 19:34:21,969:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:34:27,758:ERROR:create_model() for lasso raised an exception or returned all 0.0:
2025-10-18 19:34:27,766:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:34:27,766:INFO:Initializing Ridge Regression
2025-10-18 19:34:27,766:INFO:Total runtime is 0.4251830856005351 minutes
2025-10-18 19:34:27,767:INFO:SubProcess create_model() called ==================================
2025-10-18 19:34:27,767:INFO:Initializing create_model()
2025-10-18 19:34:27,767:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:34:27,767:INFO:Checking exceptions
2025-10-18 19:34:27,767:INFO:Importing libraries
2025-10-18 19:34:27,767:INFO:Copying training dataset
2025-10-18 19:34:27,771:INFO:Defining folds
2025-10-18 19:34:27,772:INFO:Declaring metric variables
2025-10-18 19:34:27,772:INFO:Importing untrained model
2025-10-18 19:34:27,772:INFO:Ridge Regression Imported successfully
2025-10-18 19:34:27,772:INFO:Starting cross validation
2025-10-18 19:34:27,774:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:34:33,836:WARNING:create_model() for ridge raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:34:33,840:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:34:33,840:INFO:Initializing create_model()
2025-10-18 19:34:33,841:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:34:33,841:INFO:Checking exceptions
2025-10-18 19:34:33,841:INFO:Importing libraries
2025-10-18 19:34:33,841:INFO:Copying training dataset
2025-10-18 19:34:33,845:INFO:Defining folds
2025-10-18 19:34:33,845:INFO:Declaring metric variables
2025-10-18 19:34:33,845:INFO:Importing untrained model
2025-10-18 19:34:33,846:INFO:Ridge Regression Imported successfully
2025-10-18 19:34:33,846:INFO:Starting cross validation
2025-10-18 19:34:33,847:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:34:40,398:ERROR:create_model() for ridge raised an exception or returned all 0.0:
2025-10-18 19:34:40,408:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:34:40,408:INFO:Initializing Elastic Net
2025-10-18 19:34:40,408:INFO:Total runtime is 0.6358874956766765 minutes
2025-10-18 19:34:40,408:INFO:SubProcess create_model() called ==================================
2025-10-18 19:34:40,409:INFO:Initializing create_model()
2025-10-18 19:34:40,409:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:34:40,409:INFO:Checking exceptions
2025-10-18 19:34:40,409:INFO:Importing libraries
2025-10-18 19:34:40,409:INFO:Copying training dataset
2025-10-18 19:34:40,413:INFO:Defining folds
2025-10-18 19:34:40,413:INFO:Declaring metric variables
2025-10-18 19:34:40,414:INFO:Importing untrained model
2025-10-18 19:34:40,414:INFO:Elastic Net Imported successfully
2025-10-18 19:34:40,414:INFO:Starting cross validation
2025-10-18 19:34:40,416:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:34:47,364:WARNING:create_model() for en raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:34:47,369:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:34:47,370:INFO:Initializing create_model()
2025-10-18 19:34:47,370:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:34:47,370:INFO:Checking exceptions
2025-10-18 19:34:47,370:INFO:Importing libraries
2025-10-18 19:34:47,370:INFO:Copying training dataset
2025-10-18 19:34:47,376:INFO:Defining folds
2025-10-18 19:34:47,376:INFO:Declaring metric variables
2025-10-18 19:34:47,376:INFO:Importing untrained model
2025-10-18 19:34:47,377:INFO:Elastic Net Imported successfully
2025-10-18 19:34:47,377:INFO:Starting cross validation
2025-10-18 19:34:47,381:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:34:55,598:ERROR:create_model() for en raised an exception or returned all 0.0:
2025-10-18 19:34:55,609:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:34:55,609:INFO:Initializing Least Angle Regression
2025-10-18 19:34:55,609:INFO:Total runtime is 0.8892347613970439 minutes
2025-10-18 19:34:55,609:INFO:SubProcess create_model() called ==================================
2025-10-18 19:34:55,610:INFO:Initializing create_model()
2025-10-18 19:34:55,610:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:34:55,610:INFO:Checking exceptions
2025-10-18 19:34:55,610:INFO:Importing libraries
2025-10-18 19:34:55,610:INFO:Copying training dataset
2025-10-18 19:34:55,616:INFO:Defining folds
2025-10-18 19:34:55,616:INFO:Declaring metric variables
2025-10-18 19:34:55,616:INFO:Importing untrained model
2025-10-18 19:34:55,617:INFO:Least Angle Regression Imported successfully
2025-10-18 19:34:55,617:INFO:Starting cross validation
2025-10-18 19:34:55,618:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:35:04,783:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:35:04,788:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:35:04,788:INFO:Initializing create_model()
2025-10-18 19:35:04,788:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:35:04,789:INFO:Checking exceptions
2025-10-18 19:35:04,789:INFO:Importing libraries
2025-10-18 19:35:04,789:INFO:Copying training dataset
2025-10-18 19:35:04,793:INFO:Defining folds
2025-10-18 19:35:04,793:INFO:Declaring metric variables
2025-10-18 19:35:04,794:INFO:Importing untrained model
2025-10-18 19:35:04,794:INFO:Least Angle Regression Imported successfully
2025-10-18 19:35:04,794:INFO:Starting cross validation
2025-10-18 19:35:04,795:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:35:10,993:ERROR:create_model() for lar raised an exception or returned all 0.0:
2025-10-18 19:35:11,003:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:35:11,003:INFO:Initializing Lasso Least Angle Regression
2025-10-18 19:35:11,003:INFO:Total runtime is 1.1458014289538068 minutes
2025-10-18 19:35:11,003:INFO:SubProcess create_model() called ==================================
2025-10-18 19:35:11,003:INFO:Initializing create_model()
2025-10-18 19:35:11,004:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:35:11,004:INFO:Checking exceptions
2025-10-18 19:35:11,004:INFO:Importing libraries
2025-10-18 19:35:11,004:INFO:Copying training dataset
2025-10-18 19:35:11,008:INFO:Defining folds
2025-10-18 19:35:11,008:INFO:Declaring metric variables
2025-10-18 19:35:11,009:INFO:Importing untrained model
2025-10-18 19:35:11,009:INFO:Lasso Least Angle Regression Imported successfully
2025-10-18 19:35:11,009:INFO:Starting cross validation
2025-10-18 19:35:11,010:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:35:18,010:WARNING:create_model() for llar raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:35:18,015:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:35:18,015:INFO:Initializing create_model()
2025-10-18 19:35:18,015:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:35:18,015:INFO:Checking exceptions
2025-10-18 19:35:18,015:INFO:Importing libraries
2025-10-18 19:35:18,015:INFO:Copying training dataset
2025-10-18 19:35:18,020:INFO:Defining folds
2025-10-18 19:35:18,020:INFO:Declaring metric variables
2025-10-18 19:35:18,020:INFO:Importing untrained model
2025-10-18 19:35:18,021:INFO:Lasso Least Angle Regression Imported successfully
2025-10-18 19:35:18,021:INFO:Starting cross validation
2025-10-18 19:35:18,022:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:35:24,206:ERROR:create_model() for llar raised an exception or returned all 0.0:
2025-10-18 19:35:24,215:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:35:24,215:INFO:Initializing Orthogonal Matching Pursuit
2025-10-18 19:35:24,215:INFO:Total runtime is 1.3660014430681866 minutes
2025-10-18 19:35:24,216:INFO:SubProcess create_model() called ==================================
2025-10-18 19:35:24,216:INFO:Initializing create_model()
2025-10-18 19:35:24,216:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:35:24,216:INFO:Checking exceptions
2025-10-18 19:35:24,216:INFO:Importing libraries
2025-10-18 19:35:24,216:INFO:Copying training dataset
2025-10-18 19:35:24,220:INFO:Defining folds
2025-10-18 19:35:24,220:INFO:Declaring metric variables
2025-10-18 19:35:24,220:INFO:Importing untrained model
2025-10-18 19:35:24,221:INFO:Orthogonal Matching Pursuit Imported successfully
2025-10-18 19:35:24,221:INFO:Starting cross validation
2025-10-18 19:35:24,222:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:35:30,100:WARNING:create_model() for omp raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:35:30,104:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:35:30,105:INFO:Initializing create_model()
2025-10-18 19:35:30,105:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:35:30,105:INFO:Checking exceptions
2025-10-18 19:35:30,105:INFO:Importing libraries
2025-10-18 19:35:30,105:INFO:Copying training dataset
2025-10-18 19:35:30,109:INFO:Defining folds
2025-10-18 19:35:30,109:INFO:Declaring metric variables
2025-10-18 19:35:30,109:INFO:Importing untrained model
2025-10-18 19:35:30,110:INFO:Orthogonal Matching Pursuit Imported successfully
2025-10-18 19:35:30,110:INFO:Starting cross validation
2025-10-18 19:35:30,111:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:35:36,131:ERROR:create_model() for omp raised an exception or returned all 0.0:
2025-10-18 19:35:36,139:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:35:36,139:INFO:Initializing Bayesian Ridge
2025-10-18 19:35:36,139:INFO:Total runtime is 1.564734752972921 minutes
2025-10-18 19:35:36,139:INFO:SubProcess create_model() called ==================================
2025-10-18 19:35:36,140:INFO:Initializing create_model()
2025-10-18 19:35:36,140:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:35:36,140:INFO:Checking exceptions
2025-10-18 19:35:36,140:INFO:Importing libraries
2025-10-18 19:35:36,140:INFO:Copying training dataset
2025-10-18 19:35:36,144:INFO:Defining folds
2025-10-18 19:35:36,144:INFO:Declaring metric variables
2025-10-18 19:35:36,144:INFO:Importing untrained model
2025-10-18 19:35:36,144:INFO:Bayesian Ridge Imported successfully
2025-10-18 19:35:36,145:INFO:Starting cross validation
2025-10-18 19:35:36,146:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:35:42,085:WARNING:create_model() for br raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:35:42,090:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:35:42,090:INFO:Initializing create_model()
2025-10-18 19:35:42,090:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:35:42,090:INFO:Checking exceptions
2025-10-18 19:35:42,091:INFO:Importing libraries
2025-10-18 19:35:42,091:INFO:Copying training dataset
2025-10-18 19:35:42,094:INFO:Defining folds
2025-10-18 19:35:42,095:INFO:Declaring metric variables
2025-10-18 19:35:42,095:INFO:Importing untrained model
2025-10-18 19:35:42,095:INFO:Bayesian Ridge Imported successfully
2025-10-18 19:35:42,095:INFO:Starting cross validation
2025-10-18 19:35:42,097:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:35:48,016:ERROR:create_model() for br raised an exception or returned all 0.0:
2025-10-18 19:35:48,026:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:35:48,026:INFO:Initializing Automatic Relevance Determination
2025-10-18 19:35:48,026:INFO:Total runtime is 1.7628514687220258 minutes
2025-10-18 19:35:48,027:INFO:SubProcess create_model() called ==================================
2025-10-18 19:35:48,027:INFO:Initializing create_model()
2025-10-18 19:35:48,027:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=ard, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:35:48,027:INFO:Checking exceptions
2025-10-18 19:35:48,027:INFO:Importing libraries
2025-10-18 19:35:48,027:INFO:Copying training dataset
2025-10-18 19:35:48,031:INFO:Defining folds
2025-10-18 19:35:48,031:INFO:Declaring metric variables
2025-10-18 19:35:48,032:INFO:Importing untrained model
2025-10-18 19:35:48,032:INFO:Automatic Relevance Determination Imported successfully
2025-10-18 19:35:48,032:INFO:Starting cross validation
2025-10-18 19:35:48,033:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:35:53,899:WARNING:create_model() for ard raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:35:53,905:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:35:53,906:INFO:Initializing create_model()
2025-10-18 19:35:53,906:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=ard, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:35:53,906:INFO:Checking exceptions
2025-10-18 19:35:53,906:INFO:Importing libraries
2025-10-18 19:35:53,906:INFO:Copying training dataset
2025-10-18 19:35:53,910:INFO:Defining folds
2025-10-18 19:35:53,910:INFO:Declaring metric variables
2025-10-18 19:35:53,910:INFO:Importing untrained model
2025-10-18 19:35:53,911:INFO:Automatic Relevance Determination Imported successfully
2025-10-18 19:35:53,911:INFO:Starting cross validation
2025-10-18 19:35:53,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:36:00,780:ERROR:create_model() for ard raised an exception or returned all 0.0:
2025-10-18 19:36:00,788:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:36:00,789:INFO:Initializing Passive Aggressive Regressor
2025-10-18 19:36:00,789:INFO:Total runtime is 1.9755680958429975 minutes
2025-10-18 19:36:00,789:INFO:SubProcess create_model() called ==================================
2025-10-18 19:36:00,789:INFO:Initializing create_model()
2025-10-18 19:36:00,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:36:00,789:INFO:Checking exceptions
2025-10-18 19:36:00,789:INFO:Importing libraries
2025-10-18 19:36:00,790:INFO:Copying training dataset
2025-10-18 19:36:00,794:INFO:Defining folds
2025-10-18 19:36:00,794:INFO:Declaring metric variables
2025-10-18 19:36:00,794:INFO:Importing untrained model
2025-10-18 19:36:00,794:INFO:Passive Aggressive Regressor Imported successfully
2025-10-18 19:36:00,795:INFO:Starting cross validation
2025-10-18 19:36:00,796:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:36:06,884:WARNING:create_model() for par raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:36:06,888:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:36:06,888:INFO:Initializing create_model()
2025-10-18 19:36:06,888:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:36:06,888:INFO:Checking exceptions
2025-10-18 19:36:06,888:INFO:Importing libraries
2025-10-18 19:36:06,888:INFO:Copying training dataset
2025-10-18 19:36:06,892:INFO:Defining folds
2025-10-18 19:36:06,892:INFO:Declaring metric variables
2025-10-18 19:36:06,893:INFO:Importing untrained model
2025-10-18 19:36:06,893:INFO:Passive Aggressive Regressor Imported successfully
2025-10-18 19:36:06,893:INFO:Starting cross validation
2025-10-18 19:36:06,894:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:36:13,230:ERROR:create_model() for par raised an exception or returned all 0.0:
2025-10-18 19:36:13,237:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:36:13,238:INFO:Initializing Random Sample Consensus
2025-10-18 19:36:13,238:INFO:Total runtime is 2.183051431179047 minutes
2025-10-18 19:36:13,238:INFO:SubProcess create_model() called ==================================
2025-10-18 19:36:13,238:INFO:Initializing create_model()
2025-10-18 19:36:13,238:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=ransac, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:36:13,238:INFO:Checking exceptions
2025-10-18 19:36:13,238:INFO:Importing libraries
2025-10-18 19:36:13,239:INFO:Copying training dataset
2025-10-18 19:36:13,243:INFO:Defining folds
2025-10-18 19:36:13,243:INFO:Declaring metric variables
2025-10-18 19:36:13,243:INFO:Importing untrained model
2025-10-18 19:36:13,243:INFO:Random Sample Consensus Imported successfully
2025-10-18 19:36:13,243:INFO:Starting cross validation
2025-10-18 19:36:13,245:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:36:19,593:WARNING:create_model() for ransac raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:36:19,598:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:36:19,599:INFO:Initializing create_model()
2025-10-18 19:36:19,599:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=ransac, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:36:19,599:INFO:Checking exceptions
2025-10-18 19:36:19,599:INFO:Importing libraries
2025-10-18 19:36:19,599:INFO:Copying training dataset
2025-10-18 19:36:19,603:INFO:Defining folds
2025-10-18 19:36:19,603:INFO:Declaring metric variables
2025-10-18 19:36:19,603:INFO:Importing untrained model
2025-10-18 19:36:19,604:INFO:Random Sample Consensus Imported successfully
2025-10-18 19:36:19,604:INFO:Starting cross validation
2025-10-18 19:36:19,606:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:36:26,192:ERROR:create_model() for ransac raised an exception or returned all 0.0:
2025-10-18 19:36:26,199:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:36:26,199:INFO:Initializing TheilSen Regressor
2025-10-18 19:36:26,200:INFO:Total runtime is 2.399068101247152 minutes
2025-10-18 19:36:26,200:INFO:SubProcess create_model() called ==================================
2025-10-18 19:36:26,200:INFO:Initializing create_model()
2025-10-18 19:36:26,200:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=tr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:36:26,200:INFO:Checking exceptions
2025-10-18 19:36:26,200:INFO:Importing libraries
2025-10-18 19:36:26,200:INFO:Copying training dataset
2025-10-18 19:36:26,204:INFO:Defining folds
2025-10-18 19:36:26,204:INFO:Declaring metric variables
2025-10-18 19:36:26,205:INFO:Importing untrained model
2025-10-18 19:36:26,205:INFO:TheilSen Regressor Imported successfully
2025-10-18 19:36:26,206:INFO:Starting cross validation
2025-10-18 19:36:26,207:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:36:32,428:WARNING:create_model() for tr raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:36:32,432:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:36:32,432:INFO:Initializing create_model()
2025-10-18 19:36:32,433:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=tr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:36:32,433:INFO:Checking exceptions
2025-10-18 19:36:32,433:INFO:Importing libraries
2025-10-18 19:36:32,433:INFO:Copying training dataset
2025-10-18 19:36:32,437:INFO:Defining folds
2025-10-18 19:36:32,437:INFO:Declaring metric variables
2025-10-18 19:36:32,437:INFO:Importing untrained model
2025-10-18 19:36:32,437:INFO:TheilSen Regressor Imported successfully
2025-10-18 19:36:32,438:INFO:Starting cross validation
2025-10-18 19:36:32,439:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:36:38,759:ERROR:create_model() for tr raised an exception or returned all 0.0:
2025-10-18 19:36:38,767:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:36:38,767:INFO:Initializing Huber Regressor
2025-10-18 19:36:38,767:INFO:Total runtime is 2.608534745375316 minutes
2025-10-18 19:36:38,767:INFO:SubProcess create_model() called ==================================
2025-10-18 19:36:38,768:INFO:Initializing create_model()
2025-10-18 19:36:38,768:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:36:38,768:INFO:Checking exceptions
2025-10-18 19:36:38,768:INFO:Importing libraries
2025-10-18 19:36:38,768:INFO:Copying training dataset
2025-10-18 19:36:38,772:INFO:Defining folds
2025-10-18 19:36:38,772:INFO:Declaring metric variables
2025-10-18 19:36:38,772:INFO:Importing untrained model
2025-10-18 19:36:38,773:INFO:Huber Regressor Imported successfully
2025-10-18 19:36:38,773:INFO:Starting cross validation
2025-10-18 19:36:38,774:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:36:45,305:WARNING:create_model() for huber raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:36:45,309:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:36:45,309:INFO:Initializing create_model()
2025-10-18 19:36:45,309:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:36:45,310:INFO:Checking exceptions
2025-10-18 19:36:45,310:INFO:Importing libraries
2025-10-18 19:36:45,310:INFO:Copying training dataset
2025-10-18 19:36:45,314:INFO:Defining folds
2025-10-18 19:36:45,314:INFO:Declaring metric variables
2025-10-18 19:36:45,314:INFO:Importing untrained model
2025-10-18 19:36:45,314:INFO:Huber Regressor Imported successfully
2025-10-18 19:36:45,314:INFO:Starting cross validation
2025-10-18 19:36:45,316:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:36:51,173:ERROR:create_model() for huber raised an exception or returned all 0.0:
2025-10-18 19:36:51,181:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:36:51,182:INFO:Initializing Kernel Ridge
2025-10-18 19:36:51,182:INFO:Total runtime is 2.8154514273007716 minutes
2025-10-18 19:36:51,182:INFO:SubProcess create_model() called ==================================
2025-10-18 19:36:51,182:INFO:Initializing create_model()
2025-10-18 19:36:51,182:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=kr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:36:51,182:INFO:Checking exceptions
2025-10-18 19:36:51,182:INFO:Importing libraries
2025-10-18 19:36:51,183:INFO:Copying training dataset
2025-10-18 19:36:51,186:INFO:Defining folds
2025-10-18 19:36:51,186:INFO:Declaring metric variables
2025-10-18 19:36:51,187:INFO:Importing untrained model
2025-10-18 19:36:51,187:INFO:Kernel Ridge Imported successfully
2025-10-18 19:36:51,187:INFO:Starting cross validation
2025-10-18 19:36:51,188:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:36:57,045:WARNING:create_model() for kr raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:36:57,049:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:36:57,049:INFO:Initializing create_model()
2025-10-18 19:36:57,049:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=kr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:36:57,049:INFO:Checking exceptions
2025-10-18 19:36:57,049:INFO:Importing libraries
2025-10-18 19:36:57,049:INFO:Copying training dataset
2025-10-18 19:36:57,053:INFO:Defining folds
2025-10-18 19:36:57,053:INFO:Declaring metric variables
2025-10-18 19:36:57,054:INFO:Importing untrained model
2025-10-18 19:36:57,054:INFO:Kernel Ridge Imported successfully
2025-10-18 19:36:57,054:INFO:Starting cross validation
2025-10-18 19:36:57,055:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:37:02,796:ERROR:create_model() for kr raised an exception or returned all 0.0:
2025-10-18 19:37:02,803:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:37:02,803:INFO:Initializing Support Vector Regression
2025-10-18 19:37:02,803:INFO:Total runtime is 3.0091347694396977 minutes
2025-10-18 19:37:02,804:INFO:SubProcess create_model() called ==================================
2025-10-18 19:37:02,804:INFO:Initializing create_model()
2025-10-18 19:37:02,804:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:37:02,804:INFO:Checking exceptions
2025-10-18 19:37:02,804:INFO:Importing libraries
2025-10-18 19:37:02,804:INFO:Copying training dataset
2025-10-18 19:37:02,808:INFO:Defining folds
2025-10-18 19:37:02,808:INFO:Declaring metric variables
2025-10-18 19:37:02,808:INFO:Importing untrained model
2025-10-18 19:37:02,808:INFO:Support Vector Regression Imported successfully
2025-10-18 19:37:02,809:INFO:Starting cross validation
2025-10-18 19:37:02,810:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:37:08,692:WARNING:create_model() for svm raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:37:08,696:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:37:08,696:INFO:Initializing create_model()
2025-10-18 19:37:08,696:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:37:08,696:INFO:Checking exceptions
2025-10-18 19:37:08,696:INFO:Importing libraries
2025-10-18 19:37:08,696:INFO:Copying training dataset
2025-10-18 19:37:08,700:INFO:Defining folds
2025-10-18 19:37:08,700:INFO:Declaring metric variables
2025-10-18 19:37:08,701:INFO:Importing untrained model
2025-10-18 19:37:08,701:INFO:Support Vector Regression Imported successfully
2025-10-18 19:37:08,701:INFO:Starting cross validation
2025-10-18 19:37:08,703:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:37:14,584:ERROR:create_model() for svm raised an exception or returned all 0.0:
2025-10-18 19:37:14,592:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:37:14,593:INFO:Initializing K Neighbors Regressor
2025-10-18 19:37:14,593:INFO:Total runtime is 3.2056347807248438 minutes
2025-10-18 19:37:14,593:INFO:SubProcess create_model() called ==================================
2025-10-18 19:37:14,593:INFO:Initializing create_model()
2025-10-18 19:37:14,593:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:37:14,593:INFO:Checking exceptions
2025-10-18 19:37:14,594:INFO:Importing libraries
2025-10-18 19:37:14,594:INFO:Copying training dataset
2025-10-18 19:37:14,597:INFO:Defining folds
2025-10-18 19:37:14,598:INFO:Declaring metric variables
2025-10-18 19:37:14,598:INFO:Importing untrained model
2025-10-18 19:37:14,598:INFO:K Neighbors Regressor Imported successfully
2025-10-18 19:37:14,599:INFO:Starting cross validation
2025-10-18 19:37:14,600:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:37:20,518:WARNING:create_model() for knn raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:37:20,523:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:37:20,523:INFO:Initializing create_model()
2025-10-18 19:37:20,523:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:37:20,523:INFO:Checking exceptions
2025-10-18 19:37:20,523:INFO:Importing libraries
2025-10-18 19:37:20,523:INFO:Copying training dataset
2025-10-18 19:37:20,527:INFO:Defining folds
2025-10-18 19:37:20,528:INFO:Declaring metric variables
2025-10-18 19:37:20,528:INFO:Importing untrained model
2025-10-18 19:37:20,528:INFO:K Neighbors Regressor Imported successfully
2025-10-18 19:37:20,528:INFO:Starting cross validation
2025-10-18 19:37:20,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:37:26,499:ERROR:create_model() for knn raised an exception or returned all 0.0:
2025-10-18 19:37:26,506:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:37:26,507:INFO:Initializing Decision Tree Regressor
2025-10-18 19:37:26,507:INFO:Total runtime is 3.404201404253642 minutes
2025-10-18 19:37:26,507:INFO:SubProcess create_model() called ==================================
2025-10-18 19:37:26,507:INFO:Initializing create_model()
2025-10-18 19:37:26,507:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:37:26,507:INFO:Checking exceptions
2025-10-18 19:37:26,508:INFO:Importing libraries
2025-10-18 19:37:26,508:INFO:Copying training dataset
2025-10-18 19:37:26,511:INFO:Defining folds
2025-10-18 19:37:26,512:INFO:Declaring metric variables
2025-10-18 19:37:26,512:INFO:Importing untrained model
2025-10-18 19:37:26,512:INFO:Decision Tree Regressor Imported successfully
2025-10-18 19:37:26,512:INFO:Starting cross validation
2025-10-18 19:37:26,513:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:37:32,395:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:37:32,399:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:37:32,399:INFO:Initializing create_model()
2025-10-18 19:37:32,399:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:37:32,399:INFO:Checking exceptions
2025-10-18 19:37:32,399:INFO:Importing libraries
2025-10-18 19:37:32,399:INFO:Copying training dataset
2025-10-18 19:37:32,403:INFO:Defining folds
2025-10-18 19:37:32,403:INFO:Declaring metric variables
2025-10-18 19:37:32,403:INFO:Importing untrained model
2025-10-18 19:37:32,404:INFO:Decision Tree Regressor Imported successfully
2025-10-18 19:37:32,404:INFO:Starting cross validation
2025-10-18 19:37:32,405:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:37:38,202:ERROR:create_model() for dt raised an exception or returned all 0.0:
2025-10-18 19:37:38,210:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:37:38,210:INFO:Initializing Random Forest Regressor
2025-10-18 19:37:38,210:INFO:Total runtime is 3.599251429239909 minutes
2025-10-18 19:37:38,211:INFO:SubProcess create_model() called ==================================
2025-10-18 19:37:38,211:INFO:Initializing create_model()
2025-10-18 19:37:38,211:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:37:38,211:INFO:Checking exceptions
2025-10-18 19:37:38,211:INFO:Importing libraries
2025-10-18 19:37:38,211:INFO:Copying training dataset
2025-10-18 19:37:38,216:INFO:Defining folds
2025-10-18 19:37:38,216:INFO:Declaring metric variables
2025-10-18 19:37:38,216:INFO:Importing untrained model
2025-10-18 19:37:38,217:INFO:Random Forest Regressor Imported successfully
2025-10-18 19:37:38,217:INFO:Starting cross validation
2025-10-18 19:37:38,218:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:37:44,101:WARNING:create_model() for rf raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:37:44,105:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:37:44,106:INFO:Initializing create_model()
2025-10-18 19:37:44,106:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:37:44,106:INFO:Checking exceptions
2025-10-18 19:37:44,106:INFO:Importing libraries
2025-10-18 19:37:44,106:INFO:Copying training dataset
2025-10-18 19:37:44,110:INFO:Defining folds
2025-10-18 19:37:44,110:INFO:Declaring metric variables
2025-10-18 19:37:44,110:INFO:Importing untrained model
2025-10-18 19:37:44,111:INFO:Random Forest Regressor Imported successfully
2025-10-18 19:37:44,111:INFO:Starting cross validation
2025-10-18 19:37:44,112:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:37:49,992:ERROR:create_model() for rf raised an exception or returned all 0.0:
2025-10-18 19:37:49,999:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:37:49,999:INFO:Initializing Extra Trees Regressor
2025-10-18 19:37:50,000:INFO:Total runtime is 3.7957514246304833 minutes
2025-10-18 19:37:50,000:INFO:SubProcess create_model() called ==================================
2025-10-18 19:37:50,000:INFO:Initializing create_model()
2025-10-18 19:37:50,000:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:37:50,000:INFO:Checking exceptions
2025-10-18 19:37:50,000:INFO:Importing libraries
2025-10-18 19:37:50,000:INFO:Copying training dataset
2025-10-18 19:37:50,004:INFO:Defining folds
2025-10-18 19:37:50,004:INFO:Declaring metric variables
2025-10-18 19:37:50,004:INFO:Importing untrained model
2025-10-18 19:37:50,005:INFO:Extra Trees Regressor Imported successfully
2025-10-18 19:37:50,005:INFO:Starting cross validation
2025-10-18 19:37:50,006:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:37:55,931:WARNING:create_model() for et raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:37:55,935:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:37:55,936:INFO:Initializing create_model()
2025-10-18 19:37:55,936:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:37:55,936:INFO:Checking exceptions
2025-10-18 19:37:55,936:INFO:Importing libraries
2025-10-18 19:37:55,936:INFO:Copying training dataset
2025-10-18 19:37:55,940:INFO:Defining folds
2025-10-18 19:37:55,941:INFO:Declaring metric variables
2025-10-18 19:37:55,941:INFO:Importing untrained model
2025-10-18 19:37:55,941:INFO:Extra Trees Regressor Imported successfully
2025-10-18 19:37:55,941:INFO:Starting cross validation
2025-10-18 19:37:55,943:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:38:01,788:ERROR:create_model() for et raised an exception or returned all 0.0:
2025-10-18 19:38:01,795:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:38:01,796:INFO:Initializing AdaBoost Regressor
2025-10-18 19:38:01,796:INFO:Total runtime is 3.9923514087994896 minutes
2025-10-18 19:38:01,796:INFO:SubProcess create_model() called ==================================
2025-10-18 19:38:01,796:INFO:Initializing create_model()
2025-10-18 19:38:01,796:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:38:01,796:INFO:Checking exceptions
2025-10-18 19:38:01,796:INFO:Importing libraries
2025-10-18 19:38:01,796:INFO:Copying training dataset
2025-10-18 19:38:01,801:INFO:Defining folds
2025-10-18 19:38:01,801:INFO:Declaring metric variables
2025-10-18 19:38:01,801:INFO:Importing untrained model
2025-10-18 19:38:01,801:INFO:AdaBoost Regressor Imported successfully
2025-10-18 19:38:01,801:INFO:Starting cross validation
2025-10-18 19:38:01,803:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:38:07,616:WARNING:create_model() for ada raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:38:07,620:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:38:07,620:INFO:Initializing create_model()
2025-10-18 19:38:07,620:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:38:07,620:INFO:Checking exceptions
2025-10-18 19:38:07,620:INFO:Importing libraries
2025-10-18 19:38:07,620:INFO:Copying training dataset
2025-10-18 19:38:07,625:INFO:Defining folds
2025-10-18 19:38:07,625:INFO:Declaring metric variables
2025-10-18 19:38:07,625:INFO:Importing untrained model
2025-10-18 19:38:07,625:INFO:AdaBoost Regressor Imported successfully
2025-10-18 19:38:07,625:INFO:Starting cross validation
2025-10-18 19:38:07,627:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:38:13,542:ERROR:create_model() for ada raised an exception or returned all 0.0:
2025-10-18 19:38:13,550:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:38:13,550:INFO:Initializing Gradient Boosting Regressor
2025-10-18 19:38:13,550:INFO:Total runtime is 4.18825140396754 minutes
2025-10-18 19:38:13,550:INFO:SubProcess create_model() called ==================================
2025-10-18 19:38:13,551:INFO:Initializing create_model()
2025-10-18 19:38:13,551:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:38:13,551:INFO:Checking exceptions
2025-10-18 19:38:13,551:INFO:Importing libraries
2025-10-18 19:38:13,551:INFO:Copying training dataset
2025-10-18 19:38:13,555:INFO:Defining folds
2025-10-18 19:38:13,555:INFO:Declaring metric variables
2025-10-18 19:38:13,555:INFO:Importing untrained model
2025-10-18 19:38:13,555:INFO:Gradient Boosting Regressor Imported successfully
2025-10-18 19:38:13,556:INFO:Starting cross validation
2025-10-18 19:38:13,557:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:38:19,283:WARNING:create_model() for gbr raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:38:19,287:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:38:19,288:INFO:Initializing create_model()
2025-10-18 19:38:19,288:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:38:19,288:INFO:Checking exceptions
2025-10-18 19:38:19,288:INFO:Importing libraries
2025-10-18 19:38:19,288:INFO:Copying training dataset
2025-10-18 19:38:19,292:INFO:Defining folds
2025-10-18 19:38:19,292:INFO:Declaring metric variables
2025-10-18 19:38:19,292:INFO:Importing untrained model
2025-10-18 19:38:19,293:INFO:Gradient Boosting Regressor Imported successfully
2025-10-18 19:38:19,293:INFO:Starting cross validation
2025-10-18 19:38:19,295:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:38:25,176:ERROR:create_model() for gbr raised an exception or returned all 0.0:
2025-10-18 19:38:25,184:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:38:25,184:INFO:Initializing MLP Regressor
2025-10-18 19:38:25,184:INFO:Total runtime is 4.3821514050165815 minutes
2025-10-18 19:38:25,184:INFO:SubProcess create_model() called ==================================
2025-10-18 19:38:25,184:INFO:Initializing create_model()
2025-10-18 19:38:25,184:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=mlp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:38:25,184:INFO:Checking exceptions
2025-10-18 19:38:25,185:INFO:Importing libraries
2025-10-18 19:38:25,185:INFO:Copying training dataset
2025-10-18 19:38:25,189:INFO:Defining folds
2025-10-18 19:38:25,189:INFO:Declaring metric variables
2025-10-18 19:38:25,189:INFO:Importing untrained model
2025-10-18 19:38:25,189:INFO:MLP Regressor Imported successfully
2025-10-18 19:38:25,190:INFO:Starting cross validation
2025-10-18 19:38:25,191:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:38:31,308:WARNING:create_model() for mlp raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:38:31,312:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:38:31,312:INFO:Initializing create_model()
2025-10-18 19:38:31,313:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=mlp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:38:31,313:INFO:Checking exceptions
2025-10-18 19:38:31,313:INFO:Importing libraries
2025-10-18 19:38:31,313:INFO:Copying training dataset
2025-10-18 19:38:31,317:INFO:Defining folds
2025-10-18 19:38:31,317:INFO:Declaring metric variables
2025-10-18 19:38:31,317:INFO:Importing untrained model
2025-10-18 19:38:31,317:INFO:MLP Regressor Imported successfully
2025-10-18 19:38:31,318:INFO:Starting cross validation
2025-10-18 19:38:31,319:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:38:37,220:ERROR:create_model() for mlp raised an exception or returned all 0.0:
2025-10-18 19:38:37,227:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:38:37,227:INFO:Initializing Extreme Gradient Boosting
2025-10-18 19:38:37,228:INFO:Total runtime is 4.582884748776754 minutes
2025-10-18 19:38:37,228:INFO:SubProcess create_model() called ==================================
2025-10-18 19:38:37,228:INFO:Initializing create_model()
2025-10-18 19:38:37,228:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:38:37,228:INFO:Checking exceptions
2025-10-18 19:38:37,228:INFO:Importing libraries
2025-10-18 19:38:37,228:INFO:Copying training dataset
2025-10-18 19:38:37,233:INFO:Defining folds
2025-10-18 19:38:37,233:INFO:Declaring metric variables
2025-10-18 19:38:37,233:INFO:Importing untrained model
2025-10-18 19:38:37,234:INFO:Extreme Gradient Boosting Imported successfully
2025-10-18 19:38:37,234:INFO:Starting cross validation
2025-10-18 19:38:37,235:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:38:43,193:WARNING:create_model() for xgboost raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:38:43,197:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:38:43,197:INFO:Initializing create_model()
2025-10-18 19:38:43,198:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:38:43,198:INFO:Checking exceptions
2025-10-18 19:38:43,198:INFO:Importing libraries
2025-10-18 19:38:43,198:INFO:Copying training dataset
2025-10-18 19:38:43,202:INFO:Defining folds
2025-10-18 19:38:43,202:INFO:Declaring metric variables
2025-10-18 19:38:43,202:INFO:Importing untrained model
2025-10-18 19:38:43,203:INFO:Extreme Gradient Boosting Imported successfully
2025-10-18 19:38:43,203:INFO:Starting cross validation
2025-10-18 19:38:43,204:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:38:49,064:ERROR:create_model() for xgboost raised an exception or returned all 0.0:
2025-10-18 19:38:49,072:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:38:49,072:INFO:Initializing Light Gradient Boosting Machine
2025-10-18 19:38:49,072:INFO:Total runtime is 4.78028473854065 minutes
2025-10-18 19:38:49,072:INFO:SubProcess create_model() called ==================================
2025-10-18 19:38:49,073:INFO:Initializing create_model()
2025-10-18 19:38:49,073:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:38:49,073:INFO:Checking exceptions
2025-10-18 19:38:49,073:INFO:Importing libraries
2025-10-18 19:38:49,073:INFO:Copying training dataset
2025-10-18 19:38:49,077:INFO:Defining folds
2025-10-18 19:38:49,077:INFO:Declaring metric variables
2025-10-18 19:38:49,077:INFO:Importing untrained model
2025-10-18 19:38:49,077:INFO:Light Gradient Boosting Machine Imported successfully
2025-10-18 19:38:49,078:INFO:Starting cross validation
2025-10-18 19:38:49,079:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:38:54,760:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:38:54,764:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:38:54,764:INFO:Initializing create_model()
2025-10-18 19:38:54,764:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:38:54,764:INFO:Checking exceptions
2025-10-18 19:38:54,764:INFO:Importing libraries
2025-10-18 19:38:54,764:INFO:Copying training dataset
2025-10-18 19:38:54,769:INFO:Defining folds
2025-10-18 19:38:54,769:INFO:Declaring metric variables
2025-10-18 19:38:54,769:INFO:Importing untrained model
2025-10-18 19:38:54,770:INFO:Light Gradient Boosting Machine Imported successfully
2025-10-18 19:38:54,770:INFO:Starting cross validation
2025-10-18 19:38:54,771:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:39:00,594:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2025-10-18 19:39:00,601:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:39:00,601:INFO:Initializing CatBoost Regressor
2025-10-18 19:39:00,602:INFO:Total runtime is 4.9724347392718 minutes
2025-10-18 19:39:00,602:INFO:SubProcess create_model() called ==================================
2025-10-18 19:39:00,602:INFO:Initializing create_model()
2025-10-18 19:39:00,602:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:39:00,602:INFO:Checking exceptions
2025-10-18 19:39:00,602:INFO:Importing libraries
2025-10-18 19:39:00,602:INFO:Copying training dataset
2025-10-18 19:39:00,606:INFO:Defining folds
2025-10-18 19:39:00,606:INFO:Declaring metric variables
2025-10-18 19:39:00,606:INFO:Importing untrained model
2025-10-18 19:39:00,607:INFO:CatBoost Regressor Imported successfully
2025-10-18 19:39:00,607:INFO:Starting cross validation
2025-10-18 19:39:00,608:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:39:06,498:WARNING:create_model() for catboost raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:39:06,502:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:39:06,502:INFO:Initializing create_model()
2025-10-18 19:39:06,502:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:39:06,502:INFO:Checking exceptions
2025-10-18 19:39:06,502:INFO:Importing libraries
2025-10-18 19:39:06,502:INFO:Copying training dataset
2025-10-18 19:39:06,506:INFO:Defining folds
2025-10-18 19:39:06,506:INFO:Declaring metric variables
2025-10-18 19:39:06,507:INFO:Importing untrained model
2025-10-18 19:39:06,507:INFO:CatBoost Regressor Imported successfully
2025-10-18 19:39:06,507:INFO:Starting cross validation
2025-10-18 19:39:06,508:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:39:12,330:ERROR:create_model() for catboost raised an exception or returned all 0.0:
2025-10-18 19:39:12,338:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:39:12,338:INFO:Initializing Dummy Regressor
2025-10-18 19:39:12,338:INFO:Total runtime is 5.168051409721375 minutes
2025-10-18 19:39:12,338:INFO:SubProcess create_model() called ==================================
2025-10-18 19:39:12,338:INFO:Initializing create_model()
2025-10-18 19:39:12,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:39:12,338:INFO:Checking exceptions
2025-10-18 19:39:12,339:INFO:Importing libraries
2025-10-18 19:39:12,339:INFO:Copying training dataset
2025-10-18 19:39:12,343:INFO:Defining folds
2025-10-18 19:39:12,343:INFO:Declaring metric variables
2025-10-18 19:39:12,343:INFO:Importing untrained model
2025-10-18 19:39:12,344:INFO:Dummy Regressor Imported successfully
2025-10-18 19:39:12,344:INFO:Starting cross validation
2025-10-18 19:39:12,345:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:39:18,208:WARNING:create_model() for dummy raised an exception or returned all 0.0, trying without fit_kwargs:
2025-10-18 19:39:18,213:WARNING:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:39:18,213:INFO:Initializing create_model()
2025-10-18 19:39:18,213:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000298930B98D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:39:18,213:INFO:Checking exceptions
2025-10-18 19:39:18,213:INFO:Importing libraries
2025-10-18 19:39:18,213:INFO:Copying training dataset
2025-10-18 19:39:18,218:INFO:Defining folds
2025-10-18 19:39:18,218:INFO:Declaring metric variables
2025-10-18 19:39:18,218:INFO:Importing untrained model
2025-10-18 19:39:18,218:INFO:Dummy Regressor Imported successfully
2025-10-18 19:39:18,219:INFO:Starting cross validation
2025-10-18 19:39:18,220:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:39:24,044:ERROR:create_model() for dummy raised an exception or returned all 0.0:
2025-10-18 19:39:24,051:ERROR:Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
              ^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-10-18 19:39:24,052:INFO:_master_model_container: 0
2025-10-18 19:39:24,053:INFO:_display_container: 2
2025-10-18 19:39:24,053:INFO:[]
2025-10-18 19:39:24,053:INFO:compare_models() successfully completed......................................
2025-10-18 19:39:24,053:INFO:Initializing tune_model()
2025-10-18 19:39:24,053:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298FD5294D0>, estimator=[], fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-10-18 19:39:24,053:INFO:Checking exceptions
2025-10-18 19:41:03,607:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:41:03,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:41:03,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:41:03,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:41:43,253:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:41:43,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:41:43,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:41:43,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:41:44,002:INFO:PyCaret RegressionExperiment
2025-10-18 19:41:44,002:INFO:Logging name: reg-default-name
2025-10-18 19:41:44,002:INFO:ML Usecase: MLUsecase.REGRESSION
2025-10-18 19:41:44,002:INFO:version 3.3.2
2025-10-18 19:41:44,002:INFO:Initializing setup()
2025-10-18 19:41:44,002:INFO:self.USI: 3830
2025-10-18 19:41:44,002:INFO:self._variable_keys: {'gpu_n_jobs_param', 'fold_groups_param', 'seed', 'memory', 'logging_param', 'data', 'fold_generator', 'fold_shuffle_param', 'idx', 'y_train', 'USI', 'X_test', 'X_train', 'gpu_param', 'y_test', 'n_jobs_param', 'exp_name_log', 'html_param', 'X', 'pipeline', 'log_plots_param', 'target_param', '_ml_usecase', 'transform_target_param', 'exp_id', 'y', '_available_plots'}
2025-10-18 19:41:44,002:INFO:Checking environment
2025-10-18 19:41:44,003:INFO:python_version: 3.11.13
2025-10-18 19:41:44,003:INFO:python_build: ('main', 'Jun  4 2025 14:39:58')
2025-10-18 19:41:44,003:INFO:machine: AMD64
2025-10-18 19:41:44,003:INFO:platform: Windows-10-10.0.19045-SP0
2025-10-18 19:41:44,009:INFO:Memory: svmem(total=8528990208, available=2417483776, percent=71.7, used=6111506432, free=2417483776)
2025-10-18 19:41:44,010:INFO:Physical Core: 4
2025-10-18 19:41:44,010:INFO:Logical Core: 4
2025-10-18 19:41:44,010:INFO:Checking libraries
2025-10-18 19:41:44,010:INFO:System:
2025-10-18 19:41:44,010:INFO:    python: 3.11.13 | packaged by conda-forge | (main, Jun  4 2025, 14:39:58) [MSC v.1943 64 bit (AMD64)]
2025-10-18 19:41:44,010:INFO:executable: C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\python.exe
2025-10-18 19:41:44,010:INFO:   machine: Windows-10-10.0.19045-SP0
2025-10-18 19:41:44,010:INFO:PyCaret required dependencies:
2025-10-18 19:41:45,460:INFO:                 pip: 25.2
2025-10-18 19:41:45,460:INFO:          setuptools: 80.9.0
2025-10-18 19:41:45,460:INFO:             pycaret: 3.3.2
2025-10-18 19:41:45,460:INFO:             IPython: 9.5.0
2025-10-18 19:41:45,460:INFO:          ipywidgets: 7.8.5
2025-10-18 19:41:45,460:INFO:                tqdm: 4.67.1
2025-10-18 19:41:45,460:INFO:               numpy: 1.25.2
2025-10-18 19:41:45,460:INFO:              pandas: 2.1.4
2025-10-18 19:41:45,461:INFO:              jinja2: 3.1.6
2025-10-18 19:41:45,461:INFO:               scipy: 1.11.4
2025-10-18 19:41:45,461:INFO:              joblib: 1.3.2
2025-10-18 19:41:45,461:INFO:             sklearn: 1.4.2
2025-10-18 19:41:45,461:INFO:                pyod: 1.1.3
2025-10-18 19:41:45,461:INFO:            imblearn: 0.14.0
2025-10-18 19:41:45,461:INFO:   category_encoders: 2.7.0
2025-10-18 19:41:45,461:INFO:            lightgbm: 4.6.0
2025-10-18 19:41:45,461:INFO:               numba: 0.61.0
2025-10-18 19:41:45,461:INFO:            requests: 2.32.5
2025-10-18 19:41:45,461:INFO:          matplotlib: 3.8.4
2025-10-18 19:41:45,461:INFO:          scikitplot: 0.3.7
2025-10-18 19:41:45,461:INFO:         yellowbrick: 1.5
2025-10-18 19:41:45,461:INFO:              plotly: 5.24.1
2025-10-18 19:41:45,461:INFO:    plotly-resampler: Not installed
2025-10-18 19:41:45,461:INFO:             kaleido: 1.1.0
2025-10-18 19:41:45,461:INFO:           schemdraw: 0.15
2025-10-18 19:41:45,461:INFO:         statsmodels: 0.14.5
2025-10-18 19:41:45,461:INFO:              sktime: 0.26.0
2025-10-18 19:41:45,461:INFO:               tbats: 1.1.3
2025-10-18 19:41:45,462:INFO:            pmdarima: 2.0.4
2025-10-18 19:41:45,462:INFO:              psutil: 7.0.0
2025-10-18 19:41:45,462:INFO:          markupsafe: 3.0.2
2025-10-18 19:41:45,462:INFO:             pickle5: Not installed
2025-10-18 19:41:45,462:INFO:         cloudpickle: 3.1.1
2025-10-18 19:41:45,462:INFO:         deprecation: 2.1.0
2025-10-18 19:41:45,462:INFO:              xxhash: 3.5.0
2025-10-18 19:41:45,462:INFO:           wurlitzer: Not installed
2025-10-18 19:41:45,462:INFO:PyCaret optional dependencies:
2025-10-18 19:41:50,887:INFO:                shap: 0.44.1
2025-10-18 19:41:50,887:INFO:           interpret: 0.7.2
2025-10-18 19:41:50,887:INFO:                umap: 0.5.3
2025-10-18 19:41:50,887:INFO:     ydata_profiling: 4.16.1
2025-10-18 19:41:50,887:INFO:  explainerdashboard: 0.5.1
2025-10-18 19:41:50,887:INFO:             autoviz: Not installed
2025-10-18 19:41:50,887:INFO:           fairlearn: 0.7.0
2025-10-18 19:41:50,887:INFO:          deepchecks: Not installed
2025-10-18 19:41:50,887:INFO:             xgboost: 2.0.3
2025-10-18 19:41:50,887:INFO:            catboost: 1.2.8
2025-10-18 19:41:50,887:INFO:              kmodes: 0.12.2
2025-10-18 19:41:50,887:INFO:             mlxtend: 0.23.4
2025-10-18 19:41:50,887:INFO:       statsforecast: 1.5.0
2025-10-18 19:41:50,887:INFO:        tune_sklearn: Not installed
2025-10-18 19:41:50,888:INFO:                 ray: Not installed
2025-10-18 19:41:50,888:INFO:            hyperopt: 0.2.7
2025-10-18 19:41:50,888:INFO:              optuna: 4.5.0
2025-10-18 19:41:50,888:INFO:               skopt: 0.10.2
2025-10-18 19:41:50,888:INFO:              mlflow: 3.2.0
2025-10-18 19:41:50,888:INFO:              gradio: 5.46.0
2025-10-18 19:41:50,888:INFO:             fastapi: 0.116.1
2025-10-18 19:41:50,888:INFO:             uvicorn: 0.35.0
2025-10-18 19:41:50,888:INFO:              m2cgen: 0.10.0
2025-10-18 19:41:50,888:INFO:           evidently: 0.4.40
2025-10-18 19:41:50,888:INFO:               fugue: 0.8.7
2025-10-18 19:41:50,888:INFO:           streamlit: 1.48.1
2025-10-18 19:41:50,888:INFO:             prophet: Not installed
2025-10-18 19:41:50,888:INFO:None
2025-10-18 19:41:50,888:INFO:Set up data.
2025-10-18 19:41:50,894:INFO:Set up folding strategy.
2025-10-18 19:41:50,894:INFO:Set up train/test split.
2025-10-18 19:41:50,898:INFO:Set up index.
2025-10-18 19:41:50,898:INFO:Assigning column types.
2025-10-18 19:41:50,902:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-18 19:41:50,902:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-10-18 19:41:50,907:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-10-18 19:41:50,911:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:41:50,971:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,015:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,016:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:41:51,019:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:41:51,050:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,055:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,059:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,117:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,162:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,163:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:41:51,165:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:41:51,166:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-10-18 19:41:51,171:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,175:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,231:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,275:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,276:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:41:51,278:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:41:51,283:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,288:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,346:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,391:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,391:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:41:51,394:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:41:51,395:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-10-18 19:41:51,404:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,459:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,505:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,506:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:41:51,509:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:41:51,518:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,576:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,620:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,620:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:41:51,624:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:41:51,626:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-10-18 19:41:51,691:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,734:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,735:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:41:51,737:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:41:51,803:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,850:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,850:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:41:51,853:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:41:51,853:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-18 19:41:51,920:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:41:51,966:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:41:51,969:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:41:52,037:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:41:52,087:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:41:52,090:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:41:52,091:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-10-18 19:41:52,205:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:41:52,208:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:41:52,318:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:41:52,321:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:41:52,323:INFO:Preparing preprocessing pipeline...
2025-10-18 19:41:52,323:INFO:Set up simple imputation.
2025-10-18 19:41:52,326:INFO:Set up encoding of ordinal features.
2025-10-18 19:41:52,328:INFO:Set up encoding of categorical features.
2025-10-18 19:41:52,401:INFO:Finished creating preprocessing pipeline.
2025-10-18 19:41:52,443:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Kond\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-10-18 19:41:52,443:INFO:Creating final display dataframe.
2025-10-18 19:41:52,648:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              3830
2025-10-18 19:41:52,772:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:41:52,775:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:41:52,886:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:41:52,888:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:41:52,890:INFO:setup() successfully completed in 8.9s...............
2025-10-18 19:41:52,890:INFO:Initializing create_model()
2025-10-18 19:41:52,890:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADADA795D0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:41:52,890:INFO:Checking exceptions
2025-10-18 19:41:52,892:INFO:Importing libraries
2025-10-18 19:41:52,892:INFO:Copying training dataset
2025-10-18 19:41:52,895:INFO:Defining folds
2025-10-18 19:41:52,896:INFO:Declaring metric variables
2025-10-18 19:41:52,896:INFO:Importing untrained model
2025-10-18 19:41:52,896:INFO:Random Forest Regressor Imported successfully
2025-10-18 19:41:52,896:INFO:Starting cross validation
2025-10-18 19:41:52,905:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-18 19:43:19,857:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:43:19,857:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:43:19,857:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:43:19,857:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:43:20,376:INFO:PyCaret RegressionExperiment
2025-10-18 19:43:20,376:INFO:Logging name: reg-default-name
2025-10-18 19:43:20,376:INFO:ML Usecase: MLUsecase.REGRESSION
2025-10-18 19:43:20,376:INFO:version 3.3.2
2025-10-18 19:43:20,376:INFO:Initializing setup()
2025-10-18 19:43:20,376:INFO:self.USI: a330
2025-10-18 19:43:20,376:INFO:self._variable_keys: {'pipeline', 'logging_param', 'gpu_param', 'X_train', 'fold_generator', '_available_plots', 'y_test', 'exp_name_log', 'exp_id', 'idx', 'target_param', 'y_train', '_ml_usecase', 'memory', 'data', 'X', 'transform_target_param', 'y', 'n_jobs_param', 'seed', 'X_test', 'USI', 'gpu_n_jobs_param', 'fold_groups_param', 'log_plots_param', 'fold_shuffle_param', 'html_param'}
2025-10-18 19:43:20,376:INFO:Checking environment
2025-10-18 19:43:20,376:INFO:python_version: 3.11.13
2025-10-18 19:43:20,376:INFO:python_build: ('main', 'Jun  4 2025 14:39:58')
2025-10-18 19:43:20,377:INFO:machine: AMD64
2025-10-18 19:43:20,377:INFO:platform: Windows-10-10.0.19045-SP0
2025-10-18 19:43:20,380:INFO:Memory: svmem(total=8528990208, available=2206892032, percent=74.1, used=6322098176, free=2206892032)
2025-10-18 19:43:20,380:INFO:Physical Core: 4
2025-10-18 19:43:20,380:INFO:Logical Core: 4
2025-10-18 19:43:20,380:INFO:Checking libraries
2025-10-18 19:43:20,380:INFO:System:
2025-10-18 19:43:20,380:INFO:    python: 3.11.13 | packaged by conda-forge | (main, Jun  4 2025, 14:39:58) [MSC v.1943 64 bit (AMD64)]
2025-10-18 19:43:20,380:INFO:executable: C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\python.exe
2025-10-18 19:43:20,380:INFO:   machine: Windows-10-10.0.19045-SP0
2025-10-18 19:43:20,381:INFO:PyCaret required dependencies:
2025-10-18 19:43:21,764:INFO:                 pip: 25.2
2025-10-18 19:43:21,764:INFO:          setuptools: 80.9.0
2025-10-18 19:43:21,764:INFO:             pycaret: 3.3.2
2025-10-18 19:43:21,764:INFO:             IPython: 9.5.0
2025-10-18 19:43:21,764:INFO:          ipywidgets: 7.8.5
2025-10-18 19:43:21,765:INFO:                tqdm: 4.67.1
2025-10-18 19:43:21,765:INFO:               numpy: 1.25.2
2025-10-18 19:43:21,765:INFO:              pandas: 2.1.4
2025-10-18 19:43:21,765:INFO:              jinja2: 3.1.6
2025-10-18 19:43:21,765:INFO:               scipy: 1.11.4
2025-10-18 19:43:21,765:INFO:              joblib: 1.3.2
2025-10-18 19:43:21,765:INFO:             sklearn: 1.4.2
2025-10-18 19:43:21,765:INFO:                pyod: 1.1.3
2025-10-18 19:43:21,765:INFO:            imblearn: 0.14.0
2025-10-18 19:43:21,765:INFO:   category_encoders: 2.7.0
2025-10-18 19:43:21,765:INFO:            lightgbm: 4.6.0
2025-10-18 19:43:21,765:INFO:               numba: 0.61.0
2025-10-18 19:43:21,765:INFO:            requests: 2.32.5
2025-10-18 19:43:21,765:INFO:          matplotlib: 3.8.4
2025-10-18 19:43:21,765:INFO:          scikitplot: 0.3.7
2025-10-18 19:43:21,765:INFO:         yellowbrick: 1.5
2025-10-18 19:43:21,765:INFO:              plotly: 5.24.1
2025-10-18 19:43:21,765:INFO:    plotly-resampler: Not installed
2025-10-18 19:43:21,765:INFO:             kaleido: 1.1.0
2025-10-18 19:43:21,766:INFO:           schemdraw: 0.15
2025-10-18 19:43:21,766:INFO:         statsmodels: 0.14.5
2025-10-18 19:43:21,766:INFO:              sktime: 0.26.0
2025-10-18 19:43:21,766:INFO:               tbats: 1.1.3
2025-10-18 19:43:21,766:INFO:            pmdarima: 2.0.4
2025-10-18 19:43:21,766:INFO:              psutil: 7.0.0
2025-10-18 19:43:21,766:INFO:          markupsafe: 3.0.2
2025-10-18 19:43:21,766:INFO:             pickle5: Not installed
2025-10-18 19:43:21,766:INFO:         cloudpickle: 3.1.1
2025-10-18 19:43:21,766:INFO:         deprecation: 2.1.0
2025-10-18 19:43:21,766:INFO:              xxhash: 3.5.0
2025-10-18 19:43:21,766:INFO:           wurlitzer: Not installed
2025-10-18 19:43:21,766:INFO:PyCaret optional dependencies:
2025-10-18 19:43:27,346:INFO:                shap: 0.44.1
2025-10-18 19:43:27,347:INFO:           interpret: 0.7.2
2025-10-18 19:43:27,347:INFO:                umap: 0.5.3
2025-10-18 19:43:27,347:INFO:     ydata_profiling: 4.16.1
2025-10-18 19:43:27,347:INFO:  explainerdashboard: 0.5.1
2025-10-18 19:43:27,347:INFO:             autoviz: Not installed
2025-10-18 19:43:27,347:INFO:           fairlearn: 0.7.0
2025-10-18 19:43:27,347:INFO:          deepchecks: Not installed
2025-10-18 19:43:27,347:INFO:             xgboost: 2.0.3
2025-10-18 19:43:27,347:INFO:            catboost: 1.2.8
2025-10-18 19:43:27,347:INFO:              kmodes: 0.12.2
2025-10-18 19:43:27,347:INFO:             mlxtend: 0.23.4
2025-10-18 19:43:27,347:INFO:       statsforecast: 1.5.0
2025-10-18 19:43:27,347:INFO:        tune_sklearn: Not installed
2025-10-18 19:43:27,347:INFO:                 ray: Not installed
2025-10-18 19:43:27,347:INFO:            hyperopt: 0.2.7
2025-10-18 19:43:27,347:INFO:              optuna: 4.5.0
2025-10-18 19:43:27,347:INFO:               skopt: 0.10.2
2025-10-18 19:43:27,347:INFO:              mlflow: 3.2.0
2025-10-18 19:43:27,348:INFO:              gradio: 5.46.0
2025-10-18 19:43:27,348:INFO:             fastapi: 0.116.1
2025-10-18 19:43:27,348:INFO:             uvicorn: 0.35.0
2025-10-18 19:43:27,348:INFO:              m2cgen: 0.10.0
2025-10-18 19:43:27,348:INFO:           evidently: 0.4.40
2025-10-18 19:43:27,348:INFO:               fugue: 0.8.7
2025-10-18 19:43:27,348:INFO:           streamlit: 1.48.1
2025-10-18 19:43:27,348:INFO:             prophet: Not installed
2025-10-18 19:43:27,348:INFO:None
2025-10-18 19:43:27,348:INFO:Set up data.
2025-10-18 19:43:27,355:INFO:Set up folding strategy.
2025-10-18 19:43:27,355:INFO:Set up train/test split.
2025-10-18 19:43:27,359:INFO:Set up index.
2025-10-18 19:43:27,359:INFO:Assigning column types.
2025-10-18 19:43:27,362:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-18 19:43:27,362:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,367:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,372:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,435:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,482:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,482:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:43:27,485:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:43:27,517:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,521:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,526:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,585:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,631:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,631:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:43:27,634:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:43:27,635:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-10-18 19:43:27,640:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,645:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,705:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,751:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,752:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:43:27,754:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:43:27,759:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,764:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,821:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,868:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,868:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:43:27,871:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:43:27,872:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-10-18 19:43:27,880:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,939:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,987:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:43:27,988:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:43:27,990:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:43:28,002:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-10-18 19:43:28,062:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:43:28,107:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:43:28,108:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:43:28,111:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:43:28,113:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-10-18 19:43:28,181:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:43:28,226:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:43:28,226:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:43:28,229:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:43:28,296:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:43:28,341:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-18 19:43:28,342:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:43:28,345:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:43:28,345:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-18 19:43:28,415:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:43:28,463:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:43:28,465:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:43:28,534:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-10-18 19:43:28,581:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:43:28,584:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:43:28,585:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-10-18 19:43:28,703:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:43:28,706:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:43:28,829:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:43:28,832:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:43:28,834:INFO:Preparing preprocessing pipeline...
2025-10-18 19:43:28,834:INFO:Set up simple imputation.
2025-10-18 19:43:28,838:INFO:Set up encoding of ordinal features.
2025-10-18 19:43:28,840:INFO:Set up encoding of categorical features.
2025-10-18 19:43:28,912:INFO:Finished creating preprocessing pipeline.
2025-10-18 19:43:28,955:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Kond\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-10-18 19:43:28,955:INFO:Creating final display dataframe.
2025-10-18 19:43:29,170:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                 5
17                     CPU Jobs                 1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              a330
2025-10-18 19:43:29,304:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:43:29,307:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:43:29,422:INFO:Soft dependency imported: xgboost: 2.0.3
2025-10-18 19:43:29,425:INFO:Soft dependency imported: catboost: 1.2.8
2025-10-18 19:43:29,426:INFO:setup() successfully completed in 9.06s...............
2025-10-18 19:43:29,426:INFO:Initializing create_model()
2025-10-18 19:43:29,427:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021F1DAED810>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:43:29,427:INFO:Checking exceptions
2025-10-18 19:43:29,429:INFO:Importing libraries
2025-10-18 19:43:29,429:INFO:Copying training dataset
2025-10-18 19:43:29,432:INFO:Defining folds
2025-10-18 19:43:29,432:INFO:Declaring metric variables
2025-10-18 19:43:29,433:INFO:Importing untrained model
2025-10-18 19:43:29,433:INFO:Random Forest Regressor Imported successfully
2025-10-18 19:43:29,433:INFO:Starting cross validation
2025-10-18 19:43:29,442:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2025-10-18 19:43:31,184:INFO:Calculating mean and std
2025-10-18 19:43:31,185:INFO:Creating metrics dataframe
2025-10-18 19:43:31,187:INFO:Finalizing model
2025-10-18 19:43:31,666:INFO:Uploading results into container
2025-10-18 19:43:31,667:INFO:Uploading model into container now
2025-10-18 19:43:31,676:INFO:_master_model_container: 1
2025-10-18 19:43:31,676:INFO:_display_container: 2
2025-10-18 19:43:31,676:INFO:RandomForestRegressor(n_jobs=1, random_state=123)
2025-10-18 19:43:31,676:INFO:create_model() successfully completed......................................
2025-10-18 19:43:31,858:INFO:Initializing tune_model()
2025-10-18 19:43:31,858:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021F1DAED810>, estimator=RandomForestRegressor(n_jobs=1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-10-18 19:43:31,858:INFO:Checking exceptions
2025-10-18 19:43:31,862:INFO:Copying training dataset
2025-10-18 19:43:31,864:INFO:Checking base model
2025-10-18 19:43:31,865:INFO:Base model : Random Forest Regressor
2025-10-18 19:43:31,865:INFO:Declaring metric variables
2025-10-18 19:43:31,865:INFO:Defining Hyperparameters
2025-10-18 19:43:32,026:INFO:Tuning with n_jobs=1
2025-10-18 19:43:32,026:INFO:Initializing RandomizedSearchCV
2025-10-18 19:43:50,896:INFO:best_params: {'actual_estimator__n_estimators': 100, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2025-10-18 19:43:50,897:INFO:Hyperparameter search completed
2025-10-18 19:43:50,897:INFO:SubProcess create_model() called ==================================
2025-10-18 19:43:50,897:INFO:Initializing create_model()
2025-10-18 19:43:50,897:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021F1DAED810>, estimator=RandomForestRegressor(n_jobs=1, random_state=123), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021F0F6C9810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 100, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.1, 'max_features': 1.0, 'max_depth': 9, 'criterion': 'squared_error', 'bootstrap': True})
2025-10-18 19:43:50,898:INFO:Checking exceptions
2025-10-18 19:43:50,898:INFO:Importing libraries
2025-10-18 19:43:50,898:INFO:Copying training dataset
2025-10-18 19:43:50,901:INFO:Defining folds
2025-10-18 19:43:50,901:INFO:Declaring metric variables
2025-10-18 19:43:50,902:INFO:Importing untrained model
2025-10-18 19:43:50,902:INFO:Declaring custom model
2025-10-18 19:43:50,902:INFO:Random Forest Regressor Imported successfully
2025-10-18 19:43:50,903:INFO:Starting cross validation
2025-10-18 19:43:50,904:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2025-10-18 19:43:52,164:INFO:Calculating mean and std
2025-10-18 19:43:52,165:INFO:Creating metrics dataframe
2025-10-18 19:43:52,167:INFO:Finalizing model
2025-10-18 19:43:52,412:INFO:Uploading results into container
2025-10-18 19:43:52,412:INFO:Uploading model into container now
2025-10-18 19:43:52,413:INFO:_master_model_container: 2
2025-10-18 19:43:52,413:INFO:_display_container: 3
2025-10-18 19:43:52,413:INFO:RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                      min_samples_leaf=4, min_samples_split=7, n_jobs=1,
                      random_state=123)
2025-10-18 19:43:52,413:INFO:create_model() successfully completed......................................
2025-10-18 19:43:52,577:INFO:SubProcess create_model() end ==================================
2025-10-18 19:43:52,577:INFO:choose_better activated
2025-10-18 19:43:52,578:INFO:SubProcess create_model() called ==================================
2025-10-18 19:43:52,578:INFO:Initializing create_model()
2025-10-18 19:43:52,578:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021F1DAED810>, estimator=RandomForestRegressor(n_jobs=1, random_state=123), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:43:52,578:INFO:Checking exceptions
2025-10-18 19:43:52,580:INFO:Importing libraries
2025-10-18 19:43:52,580:INFO:Copying training dataset
2025-10-18 19:43:52,583:INFO:Defining folds
2025-10-18 19:43:52,583:INFO:Declaring metric variables
2025-10-18 19:43:52,583:INFO:Importing untrained model
2025-10-18 19:43:52,583:INFO:Declaring custom model
2025-10-18 19:43:52,584:INFO:Random Forest Regressor Imported successfully
2025-10-18 19:43:52,584:INFO:Starting cross validation
2025-10-18 19:43:52,586:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2025-10-18 19:43:54,213:INFO:Calculating mean and std
2025-10-18 19:43:54,214:INFO:Creating metrics dataframe
2025-10-18 19:43:54,215:INFO:Finalizing model
2025-10-18 19:43:54,546:INFO:Uploading results into container
2025-10-18 19:43:54,546:INFO:Uploading model into container now
2025-10-18 19:43:54,547:INFO:_master_model_container: 3
2025-10-18 19:43:54,547:INFO:_display_container: 4
2025-10-18 19:43:54,547:INFO:RandomForestRegressor(n_jobs=1, random_state=123)
2025-10-18 19:43:54,547:INFO:create_model() successfully completed......................................
2025-10-18 19:43:54,702:INFO:SubProcess create_model() end ==================================
2025-10-18 19:43:54,703:INFO:RandomForestRegressor(n_jobs=1, random_state=123) result for R2 is 0.8185
2025-10-18 19:43:54,703:INFO:RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                      min_samples_leaf=4, min_samples_split=7, n_jobs=1,
                      random_state=123) result for R2 is 0.8401
2025-10-18 19:43:54,704:INFO:RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                      min_samples_leaf=4, min_samples_split=7, n_jobs=1,
                      random_state=123) is best model
2025-10-18 19:43:54,704:INFO:choose_better completed
2025-10-18 19:43:54,712:INFO:_master_model_container: 3
2025-10-18 19:43:54,712:INFO:_display_container: 3
2025-10-18 19:43:54,712:INFO:RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                      min_samples_leaf=4, min_samples_split=7, n_jobs=1,
                      random_state=123)
2025-10-18 19:43:54,712:INFO:tune_model() successfully completed......................................
2025-10-18 19:43:54,926:INFO:Initializing predict_model()
2025-10-18 19:43:54,926:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021F1DAED810>, estimator=RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                      min_samples_leaf=4, min_samples_split=7, n_jobs=1,
                      random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021F25C3BCE0>)
2025-10-18 19:43:54,926:INFO:Checking exceptions
2025-10-18 19:43:54,926:INFO:Preloading libraries
2025-10-18 19:43:55,035:WARNING:C:\Users\Kond\miniconda3\envs\Od_zero_do_AI_2\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.

2025-10-18 19:43:55,203:INFO:Initializing finalize_model()
2025-10-18 19:43:55,204:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021F1DAED810>, estimator=RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                      min_samples_leaf=4, min_samples_split=7, n_jobs=1,
                      random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-10-18 19:43:55,204:INFO:Finalizing RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                      min_samples_leaf=4, min_samples_split=7, n_jobs=1,
                      random_state=123)
2025-10-18 19:43:55,206:INFO:Initializing create_model()
2025-10-18 19:43:55,207:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021F1DAED810>, estimator=RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                      min_samples_leaf=4, min_samples_split=7, n_jobs=1,
                      random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-10-18 19:43:55,207:INFO:Checking exceptions
2025-10-18 19:43:55,207:INFO:Importing libraries
2025-10-18 19:43:55,207:INFO:Copying training dataset
2025-10-18 19:43:55,208:INFO:Defining folds
2025-10-18 19:43:55,208:INFO:Declaring metric variables
2025-10-18 19:43:55,208:INFO:Importing untrained model
2025-10-18 19:43:55,208:INFO:Declaring custom model
2025-10-18 19:43:55,208:INFO:Random Forest Regressor Imported successfully
2025-10-18 19:43:55,209:INFO:Cross validation set to False
2025-10-18 19:43:55,210:INFO:Fitting Model
2025-10-18 19:43:55,531:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))])
2025-10-18 19:43:55,531:INFO:create_model() successfully completed......................................
2025-10-18 19:43:55,682:INFO:_master_model_container: 3
2025-10-18 19:43:55,683:INFO:_display_container: 4
2025-10-18 19:43:55,725:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))])
2025-10-18 19:43:55,725:INFO:finalize_model() successfully completed......................................
2025-10-18 19:43:55,965:INFO:Initializing save_model()
2025-10-18 19:43:55,965:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), model_name=fin, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Kond\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-10-18 19:43:55,965:INFO:Adding model into prep_pipe
2025-10-18 19:43:55,965:WARNING:Only Model saved as it was a pipeline.
2025-10-18 19:43:56,001:INFO:fin.pkl saved in current working directory
2025-10-18 19:43:56,043:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))])
2025-10-18 19:43:56,044:INFO:save_model() successfully completed......................................
2025-10-18 19:59:23,235:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:59:23,236:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:59:23,236:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:59:23,236:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 19:59:53,016:INFO:Initializing load_model()
2025-10-18 19:59:53,017:INFO:load_model(model_name=fin, platform=None, authentication=None, verbose=True)
2025-10-18 19:59:54,762:INFO:Initializing predict_model()
2025-10-18 19:59:54,762:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000208129B1110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020812984D60>)
2025-10-18 19:59:54,762:INFO:Checking exceptions
2025-10-18 19:59:54,762:INFO:Preloading libraries
2025-10-18 19:59:54,763:INFO:Set up data.
2025-10-18 19:59:54,768:INFO:Set up index.
2025-10-18 20:00:15,706:INFO:Initializing predict_model()
2025-10-18 20:00:15,706:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000208148E9F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814996D40>)
2025-10-18 20:00:15,706:INFO:Checking exceptions
2025-10-18 20:00:15,706:INFO:Preloading libraries
2025-10-18 20:00:15,706:INFO:Set up data.
2025-10-18 20:00:15,715:INFO:Set up index.
2025-10-18 20:00:17,116:INFO:Initializing predict_model()
2025-10-18 20:00:17,116:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000208149115D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814997F60>)
2025-10-18 20:00:17,116:INFO:Checking exceptions
2025-10-18 20:00:17,117:INFO:Preloading libraries
2025-10-18 20:00:17,117:INFO:Set up data.
2025-10-18 20:00:17,121:INFO:Set up index.
2025-10-18 20:00:26,916:INFO:Initializing predict_model()
2025-10-18 20:00:26,916:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000208148EA810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002080EF33880>)
2025-10-18 20:00:26,917:INFO:Checking exceptions
2025-10-18 20:00:26,917:INFO:Preloading libraries
2025-10-18 20:00:26,917:INFO:Set up data.
2025-10-18 20:00:26,924:INFO:Set up index.
2025-10-18 20:00:27,697:INFO:Initializing predict_model()
2025-10-18 20:00:27,697:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000208148E5B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000208124E4CC0>)
2025-10-18 20:00:27,697:INFO:Checking exceptions
2025-10-18 20:00:27,697:INFO:Preloading libraries
2025-10-18 20:00:27,698:INFO:Set up data.
2025-10-18 20:00:27,701:INFO:Set up index.
2025-10-18 20:00:33,850:INFO:Initializing predict_model()
2025-10-18 20:00:33,850:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000208129C6B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000208149D00E0>)
2025-10-18 20:00:33,851:INFO:Checking exceptions
2025-10-18 20:00:33,851:INFO:Preloading libraries
2025-10-18 20:00:33,851:INFO:Set up data.
2025-10-18 20:00:33,855:INFO:Set up index.
2025-10-18 20:00:41,238:INFO:Initializing predict_model()
2025-10-18 20:00:41,238:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000208149E2CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000208149D05E0>)
2025-10-18 20:00:41,239:INFO:Checking exceptions
2025-10-18 20:00:41,240:INFO:Preloading libraries
2025-10-18 20:00:41,241:INFO:Set up data.
2025-10-18 20:00:41,245:INFO:Set up index.
2025-10-18 20:02:31,222:INFO:Initializing predict_model()
2025-10-18 20:02:31,222:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814AADBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814A713A0>)
2025-10-18 20:02:31,224:INFO:Checking exceptions
2025-10-18 20:02:31,224:INFO:Preloading libraries
2025-10-18 20:02:31,225:INFO:Set up data.
2025-10-18 20:02:31,230:INFO:Set up index.
2025-10-18 20:03:10,997:INFO:Initializing predict_model()
2025-10-18 20:03:10,997:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814A6C110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814A71620>)
2025-10-18 20:03:10,998:INFO:Checking exceptions
2025-10-18 20:03:10,998:INFO:Preloading libraries
2025-10-18 20:03:10,998:INFO:Set up data.
2025-10-18 20:03:11,009:INFO:Set up index.
2025-10-18 20:03:11,708:INFO:Initializing predict_model()
2025-10-18 20:03:11,708:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814AD7750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814A71760>)
2025-10-18 20:03:11,708:INFO:Checking exceptions
2025-10-18 20:03:11,708:INFO:Preloading libraries
2025-10-18 20:03:11,708:INFO:Set up data.
2025-10-18 20:03:11,712:INFO:Set up index.
2025-10-18 20:03:18,794:INFO:Initializing predict_model()
2025-10-18 20:03:18,794:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814A43390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814A713A0>)
2025-10-18 20:03:18,794:INFO:Checking exceptions
2025-10-18 20:03:18,794:INFO:Preloading libraries
2025-10-18 20:03:18,795:INFO:Set up data.
2025-10-18 20:03:18,799:INFO:Set up index.
2025-10-18 20:03:22,267:INFO:Initializing predict_model()
2025-10-18 20:03:22,268:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814AD85D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814A739C0>)
2025-10-18 20:03:22,268:INFO:Checking exceptions
2025-10-18 20:03:22,268:INFO:Preloading libraries
2025-10-18 20:03:22,268:INFO:Set up data.
2025-10-18 20:03:22,273:INFO:Set up index.
2025-10-18 20:03:23,477:INFO:Initializing predict_model()
2025-10-18 20:03:23,477:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814AD9AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000208149D3BA0>)
2025-10-18 20:03:23,477:INFO:Checking exceptions
2025-10-18 20:03:23,477:INFO:Preloading libraries
2025-10-18 20:03:23,478:INFO:Set up data.
2025-10-18 20:03:23,481:INFO:Set up index.
2025-10-18 20:03:24,662:INFO:Initializing predict_model()
2025-10-18 20:03:24,662:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814AEB210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814996C00>)
2025-10-18 20:03:24,662:INFO:Checking exceptions
2025-10-18 20:03:24,662:INFO:Preloading libraries
2025-10-18 20:03:24,662:INFO:Set up data.
2025-10-18 20:03:24,666:INFO:Set up index.
2025-10-18 20:03:27,048:INFO:Initializing predict_model()
2025-10-18 20:03:27,048:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814AF5050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814A72B60>)
2025-10-18 20:03:27,048:INFO:Checking exceptions
2025-10-18 20:03:27,048:INFO:Preloading libraries
2025-10-18 20:03:27,049:INFO:Set up data.
2025-10-18 20:03:27,055:INFO:Set up index.
2025-10-18 20:03:28,481:INFO:Initializing predict_model()
2025-10-18 20:03:28,481:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814AF7150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000208109FC4A0>)
2025-10-18 20:03:28,482:INFO:Checking exceptions
2025-10-18 20:03:28,482:INFO:Preloading libraries
2025-10-18 20:03:28,482:INFO:Set up data.
2025-10-18 20:03:28,486:INFO:Set up index.
2025-10-18 20:07:26,791:INFO:Initializing load_model()
2025-10-18 20:07:26,791:INFO:load_model(model_name=fin, platform=None, authentication=None, verbose=True)
2025-10-18 20:07:28,828:INFO:Initializing predict_model()
2025-10-18 20:07:28,828:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814A8ED50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000208149D1760>)
2025-10-18 20:07:28,828:INFO:Checking exceptions
2025-10-18 20:07:28,828:INFO:Preloading libraries
2025-10-18 20:07:28,829:INFO:Set up data.
2025-10-18 20:07:28,836:INFO:Set up index.
2025-10-18 20:07:31,655:INFO:Initializing predict_model()
2025-10-18 20:07:31,655:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814A4EB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000208149949A0>)
2025-10-18 20:07:31,655:INFO:Checking exceptions
2025-10-18 20:07:31,655:INFO:Preloading libraries
2025-10-18 20:07:31,656:INFO:Set up data.
2025-10-18 20:07:31,662:INFO:Set up index.
2025-10-18 20:09:58,477:INFO:Initializing predict_model()
2025-10-18 20:09:58,478:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080D54BA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020809532480>)
2025-10-18 20:09:58,478:INFO:Checking exceptions
2025-10-18 20:09:58,478:INFO:Preloading libraries
2025-10-18 20:09:58,478:INFO:Set up data.
2025-10-18 20:09:58,482:INFO:Set up index.
2025-10-18 20:10:05,799:INFO:Initializing predict_model()
2025-10-18 20:10:05,800:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814BD5C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814B1D4E0>)
2025-10-18 20:10:05,800:INFO:Checking exceptions
2025-10-18 20:10:05,800:INFO:Preloading libraries
2025-10-18 20:10:05,801:INFO:Set up data.
2025-10-18 20:10:05,807:INFO:Set up index.
2025-10-18 20:10:10,075:INFO:Initializing predict_model()
2025-10-18 20:10:10,075:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814BFBA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814B760C0>)
2025-10-18 20:10:10,075:INFO:Checking exceptions
2025-10-18 20:10:10,075:INFO:Preloading libraries
2025-10-18 20:10:10,075:INFO:Set up data.
2025-10-18 20:10:10,081:INFO:Set up index.
2025-10-18 20:10:15,115:INFO:Initializing predict_model()
2025-10-18 20:10:15,116:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814CDF190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814CD87C0>)
2025-10-18 20:10:15,116:INFO:Checking exceptions
2025-10-18 20:10:15,116:INFO:Preloading libraries
2025-10-18 20:10:15,116:INFO:Set up data.
2025-10-18 20:10:15,125:INFO:Set up index.
2025-10-18 20:10:16,312:INFO:Initializing predict_model()
2025-10-18 20:10:16,312:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814CC1A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814CDA2A0>)
2025-10-18 20:10:16,313:INFO:Checking exceptions
2025-10-18 20:10:16,313:INFO:Preloading libraries
2025-10-18 20:10:16,313:INFO:Set up data.
2025-10-18 20:10:16,319:INFO:Set up index.
2025-10-18 20:10:25,684:INFO:Initializing predict_model()
2025-10-18 20:10:25,684:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814CA7290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814CD8040>)
2025-10-18 20:10:25,685:INFO:Checking exceptions
2025-10-18 20:10:25,685:INFO:Preloading libraries
2025-10-18 20:10:25,685:INFO:Set up data.
2025-10-18 20:10:25,689:INFO:Set up index.
2025-10-18 20:10:27,891:INFO:Initializing predict_model()
2025-10-18 20:10:27,891:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814CA6850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814C96340>)
2025-10-18 20:10:27,892:INFO:Checking exceptions
2025-10-18 20:10:27,892:INFO:Preloading libraries
2025-10-18 20:10:27,892:INFO:Set up data.
2025-10-18 20:10:27,897:INFO:Set up index.
2025-10-18 20:10:32,496:INFO:Initializing predict_model()
2025-10-18 20:10:32,497:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814C7ADD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814C958A0>)
2025-10-18 20:10:32,497:INFO:Checking exceptions
2025-10-18 20:10:32,497:INFO:Preloading libraries
2025-10-18 20:10:32,497:INFO:Set up data.
2025-10-18 20:10:32,501:INFO:Set up index.
2025-10-18 20:10:32,996:INFO:Initializing predict_model()
2025-10-18 20:10:32,997:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814C4BE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814B1D3A0>)
2025-10-18 20:10:32,998:INFO:Checking exceptions
2025-10-18 20:10:32,998:INFO:Preloading libraries
2025-10-18 20:10:32,998:INFO:Set up data.
2025-10-18 20:10:33,002:INFO:Set up index.
2025-10-18 20:10:33,487:INFO:Initializing predict_model()
2025-10-18 20:10:33,487:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814C33210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814B65760>)
2025-10-18 20:10:33,488:INFO:Checking exceptions
2025-10-18 20:10:33,488:INFO:Preloading libraries
2025-10-18 20:10:33,488:INFO:Set up data.
2025-10-18 20:10:33,493:INFO:Set up index.
2025-10-18 20:10:33,983:INFO:Initializing predict_model()
2025-10-18 20:10:33,983:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814C4D510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814C976A0>)
2025-10-18 20:10:33,983:INFO:Checking exceptions
2025-10-18 20:10:33,984:INFO:Preloading libraries
2025-10-18 20:10:33,984:INFO:Set up data.
2025-10-18 20:10:33,995:INFO:Set up index.
2025-10-18 20:12:38,349:INFO:Initializing load_model()
2025-10-18 20:12:38,349:INFO:load_model(model_name=fin, platform=None, authentication=None, verbose=True)
2025-10-18 20:12:39,943:INFO:Initializing predict_model()
2025-10-18 20:12:39,943:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814D233D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814C145E0>)
2025-10-18 20:12:39,943:INFO:Checking exceptions
2025-10-18 20:12:39,943:INFO:Preloading libraries
2025-10-18 20:12:39,944:INFO:Set up data.
2025-10-18 20:12:39,948:INFO:Set up index.
2025-10-18 20:16:39,166:INFO:Initializing predict_model()
2025-10-18 20:16:39,166:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814C33310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814CD8220>)
2025-10-18 20:16:39,166:INFO:Checking exceptions
2025-10-18 20:16:39,166:INFO:Preloading libraries
2025-10-18 20:16:39,166:INFO:Set up data.
2025-10-18 20:16:39,170:INFO:Set up index.
2025-10-18 20:17:02,485:INFO:Initializing predict_model()
2025-10-18 20:17:02,485:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814D06450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814CDA5C0>)
2025-10-18 20:17:02,485:INFO:Checking exceptions
2025-10-18 20:17:02,485:INFO:Preloading libraries
2025-10-18 20:17:02,486:INFO:Set up data.
2025-10-18 20:17:02,494:INFO:Set up index.
2025-10-18 20:17:07,467:INFO:Initializing predict_model()
2025-10-18 20:17:07,468:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814C12990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814CD8AE0>)
2025-10-18 20:17:07,468:INFO:Checking exceptions
2025-10-18 20:17:07,468:INFO:Preloading libraries
2025-10-18 20:17:07,468:INFO:Set up data.
2025-10-18 20:17:07,471:INFO:Set up index.
2025-10-18 20:17:08,106:INFO:Initializing predict_model()
2025-10-18 20:17:08,106:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814D220D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814CDA840>)
2025-10-18 20:17:08,106:INFO:Checking exceptions
2025-10-18 20:17:08,106:INFO:Preloading libraries
2025-10-18 20:17:08,107:INFO:Set up data.
2025-10-18 20:17:08,111:INFO:Set up index.
2025-10-18 20:21:24,597:INFO:Initializing load_model()
2025-10-18 20:21:24,597:INFO:load_model(model_name=fin, platform=None, authentication=None, verbose=True)
2025-10-18 20:26:18,039:INFO:Initializing load_model()
2025-10-18 20:26:18,039:INFO:load_model(model_name=fin, platform=None, authentication=None, verbose=True)
2025-10-18 20:26:31,755:INFO:Initializing predict_model()
2025-10-18 20:26:31,755:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814D2F610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814C94400>)
2025-10-18 20:26:31,756:INFO:Checking exceptions
2025-10-18 20:26:31,756:INFO:Preloading libraries
2025-10-18 20:26:31,756:INFO:Set up data.
2025-10-18 20:26:31,761:INFO:Set up index.
2025-10-18 20:27:06,239:INFO:Initializing predict_model()
2025-10-18 20:27:06,239:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814DAF090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814E9E840>)
2025-10-18 20:27:06,240:INFO:Checking exceptions
2025-10-18 20:27:06,240:INFO:Preloading libraries
2025-10-18 20:27:06,240:INFO:Set up data.
2025-10-18 20:27:06,243:INFO:Set up index.
2025-10-18 20:27:09,177:INFO:Initializing predict_model()
2025-10-18 20:27:09,178:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814D5D890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814E9FB00>)
2025-10-18 20:27:09,178:INFO:Checking exceptions
2025-10-18 20:27:09,178:INFO:Preloading libraries
2025-10-18 20:27:09,178:INFO:Set up data.
2025-10-18 20:27:09,183:INFO:Set up index.
2025-10-18 20:27:17,431:INFO:Initializing predict_model()
2025-10-18 20:27:17,431:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814D5C450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814E7E660>)
2025-10-18 20:27:17,431:INFO:Checking exceptions
2025-10-18 20:27:17,431:INFO:Preloading libraries
2025-10-18 20:27:17,432:INFO:Set up data.
2025-10-18 20:27:17,445:INFO:Set up index.
2025-10-18 20:27:49,373:INFO:Initializing predict_model()
2025-10-18 20:27:49,373:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814D1D990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814E77100>)
2025-10-18 20:27:49,373:INFO:Checking exceptions
2025-10-18 20:27:49,374:INFO:Preloading libraries
2025-10-18 20:27:49,374:INFO:Set up data.
2025-10-18 20:27:49,378:INFO:Set up index.
2025-10-18 20:27:52,578:INFO:Initializing predict_model()
2025-10-18 20:27:52,579:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814D2DD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814CD8040>)
2025-10-18 20:27:52,579:INFO:Checking exceptions
2025-10-18 20:27:52,579:INFO:Preloading libraries
2025-10-18 20:27:52,580:INFO:Set up data.
2025-10-18 20:27:52,586:INFO:Set up index.
2025-10-18 20:27:55,185:INFO:Initializing predict_model()
2025-10-18 20:27:55,185:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814D4F8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814CD8040>)
2025-10-18 20:27:55,185:INFO:Checking exceptions
2025-10-18 20:27:55,185:INFO:Preloading libraries
2025-10-18 20:27:55,186:INFO:Set up data.
2025-10-18 20:27:55,190:INFO:Set up index.
2025-10-18 20:27:56,647:INFO:Initializing predict_model()
2025-10-18 20:27:56,647:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814DD35D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814E25940>)
2025-10-18 20:27:56,647:INFO:Checking exceptions
2025-10-18 20:27:56,647:INFO:Preloading libraries
2025-10-18 20:27:56,647:INFO:Set up data.
2025-10-18 20:27:56,652:INFO:Set up index.
2025-10-18 20:27:57,556:INFO:Initializing predict_model()
2025-10-18 20:27:57,557:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814DD19D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814E18AE0>)
2025-10-18 20:27:57,557:INFO:Checking exceptions
2025-10-18 20:27:57,557:INFO:Preloading libraries
2025-10-18 20:27:57,558:INFO:Set up data.
2025-10-18 20:27:57,567:INFO:Set up index.
2025-10-18 20:30:31,537:INFO:Initializing predict_model()
2025-10-18 20:30:31,538:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814D1F990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814EE6020>)
2025-10-18 20:30:31,557:INFO:Checking exceptions
2025-10-18 20:30:31,557:INFO:Preloading libraries
2025-10-18 20:30:31,558:INFO:Set up data.
2025-10-18 20:30:31,564:INFO:Set up index.
2025-10-18 20:30:32,075:INFO:Initializing predict_model()
2025-10-18 20:30:32,075:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814E21790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020814E5B2E0>)
2025-10-18 20:30:32,076:INFO:Checking exceptions
2025-10-18 20:30:32,076:INFO:Preloading libraries
2025-10-18 20:30:32,076:INFO:Set up data.
2025-10-18 20:30:32,085:INFO:Set up index.
2025-10-18 20:30:32,655:INFO:Initializing predict_model()
2025-10-18 20:30:32,655:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020815EFAFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020815FE1580>)
2025-10-18 20:30:32,655:INFO:Checking exceptions
2025-10-18 20:30:32,655:INFO:Preloading libraries
2025-10-18 20:30:32,656:INFO:Set up data.
2025-10-18 20:30:32,661:INFO:Set up index.
2025-10-18 20:31:43,565:INFO:Initializing predict_model()
2025-10-18 20:31:43,565:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020815F18850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020815FE1B20>)
2025-10-18 20:31:43,565:INFO:Checking exceptions
2025-10-18 20:31:43,566:INFO:Preloading libraries
2025-10-18 20:31:43,567:INFO:Set up data.
2025-10-18 20:31:43,578:INFO:Set up index.
2025-10-18 20:36:38,068:INFO:Initializing predict_model()
2025-10-18 20:36:38,069:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020814D5C850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020815FC6FC0>)
2025-10-18 20:36:38,069:INFO:Checking exceptions
2025-10-18 20:36:38,069:INFO:Preloading libraries
2025-10-18 20:36:38,070:INFO:Set up data.
2025-10-18 20:36:38,078:INFO:Set up index.
2025-10-18 20:44:40,045:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 20:44:40,045:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 20:44:40,045:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 20:44:40,045:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 20:44:42,085:INFO:Initializing load_model()
2025-10-18 20:44:42,085:INFO:load_model(model_name=fin, platform=None, authentication=None, verbose=True)
2025-10-18 20:45:17,378:INFO:Initializing predict_model()
2025-10-18 20:45:17,378:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F398D4B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F30F2E660>)
2025-10-18 20:45:17,379:INFO:Checking exceptions
2025-10-18 20:45:17,379:INFO:Preloading libraries
2025-10-18 20:45:17,379:INFO:Set up data.
2025-10-18 20:45:17,388:INFO:Set up index.
2025-10-18 20:45:22,430:INFO:Initializing predict_model()
2025-10-18 20:45:22,430:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F3B49D7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F39359260>)
2025-10-18 20:45:22,430:INFO:Checking exceptions
2025-10-18 20:45:22,430:INFO:Preloading libraries
2025-10-18 20:45:22,431:INFO:Set up data.
2025-10-18 20:45:22,435:INFO:Set up index.
2025-10-18 20:45:34,250:INFO:Initializing predict_model()
2025-10-18 20:45:34,250:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F3B4B4E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F3935B560>)
2025-10-18 20:45:34,250:INFO:Checking exceptions
2025-10-18 20:45:34,250:INFO:Preloading libraries
2025-10-18 20:45:34,251:INFO:Set up data.
2025-10-18 20:45:34,258:INFO:Set up index.
2025-10-18 20:45:39,772:INFO:Initializing predict_model()
2025-10-18 20:45:39,773:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023F3B7A4510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F3B9087C0>)
2025-10-18 20:45:39,773:INFO:Checking exceptions
2025-10-18 20:45:39,773:INFO:Preloading libraries
2025-10-18 20:45:39,774:INFO:Set up data.
2025-10-18 20:45:39,781:INFO:Set up index.
2025-10-18 20:49:13,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 20:49:13,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 20:49:13,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 20:49:13,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-18 20:49:16,200:INFO:Initializing load_model()
2025-10-18 20:49:16,200:INFO:load_model(model_name=fin, platform=None, authentication=None, verbose=True)
2025-10-18 20:49:50,026:INFO:Initializing predict_model()
2025-10-18 20:49:50,027:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A5E30F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B29AD3A8E0>)
2025-10-18 20:49:50,027:INFO:Checking exceptions
2025-10-18 20:49:50,027:INFO:Preloading libraries
2025-10-18 20:49:50,027:INFO:Set up data.
2025-10-18 20:49:50,032:INFO:Set up index.
2025-10-18 20:50:12,772:INFO:Initializing predict_model()
2025-10-18 20:50:12,772:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A5E50190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A60CB6A0>)
2025-10-18 20:50:12,773:INFO:Checking exceptions
2025-10-18 20:50:12,773:INFO:Preloading libraries
2025-10-18 20:50:12,773:INFO:Set up data.
2025-10-18 20:50:12,777:INFO:Set up index.
2025-10-18 20:50:24,534:INFO:Initializing predict_model()
2025-10-18 20:50:24,534:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A5E56710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A64189A0>)
2025-10-18 20:50:24,534:INFO:Checking exceptions
2025-10-18 20:50:24,534:INFO:Preloading libraries
2025-10-18 20:50:24,535:INFO:Set up data.
2025-10-18 20:50:24,539:INFO:Set up index.
2025-10-18 20:53:25,432:INFO:Initializing load_model()
2025-10-18 20:53:25,432:INFO:load_model(model_name=fin, platform=None, authentication=None, verbose=True)
2025-10-18 20:53:30,398:INFO:Initializing load_model()
2025-10-18 20:53:30,398:INFO:load_model(model_name=fin, platform=None, authentication=None, verbose=True)
2025-10-18 20:53:32,182:INFO:Initializing predict_model()
2025-10-18 20:53:32,182:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63B5290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A63DE020>)
2025-10-18 20:53:32,182:INFO:Checking exceptions
2025-10-18 20:53:32,183:INFO:Preloading libraries
2025-10-18 20:53:32,183:INFO:Set up data.
2025-10-18 20:53:32,187:INFO:Set up index.
2025-10-18 21:00:07,097:INFO:Initializing load_model()
2025-10-18 21:00:07,097:INFO:load_model(model_name=fin, platform=None, authentication=None, verbose=True)
2025-10-18 21:00:13,375:INFO:Initializing predict_model()
2025-10-18 21:00:13,376:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A61C2F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6184B80>)
2025-10-18 21:00:13,376:INFO:Checking exceptions
2025-10-18 21:00:13,376:INFO:Preloading libraries
2025-10-18 21:00:13,377:INFO:Set up data.
2025-10-18 21:00:13,381:INFO:Set up index.
2025-10-18 21:00:24,148:INFO:Initializing predict_model()
2025-10-18 21:00:24,148:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A61C2E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A60CB4C0>)
2025-10-18 21:00:24,148:INFO:Checking exceptions
2025-10-18 21:00:24,148:INFO:Preloading libraries
2025-10-18 21:00:24,148:INFO:Set up data.
2025-10-18 21:00:24,153:INFO:Set up index.
2025-10-18 21:00:41,524:INFO:Initializing predict_model()
2025-10-18 21:00:41,524:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A61C02D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6185080>)
2025-10-18 21:00:41,524:INFO:Checking exceptions
2025-10-18 21:00:41,524:INFO:Preloading libraries
2025-10-18 21:00:41,525:INFO:Set up data.
2025-10-18 21:00:41,533:INFO:Set up index.
2025-10-18 21:01:01,157:INFO:Initializing predict_model()
2025-10-18 21:01:01,157:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63BE390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A61874C0>)
2025-10-18 21:01:01,157:INFO:Checking exceptions
2025-10-18 21:01:01,158:INFO:Preloading libraries
2025-10-18 21:01:01,159:INFO:Set up data.
2025-10-18 21:01:01,167:INFO:Set up index.
2025-10-18 21:05:55,440:INFO:Initializing predict_model()
2025-10-18 21:05:55,440:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63CBAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A63ECF40>)
2025-10-18 21:05:55,441:INFO:Checking exceptions
2025-10-18 21:05:55,441:INFO:Preloading libraries
2025-10-18 21:05:55,441:INFO:Set up data.
2025-10-18 21:05:55,456:INFO:Set up index.
2025-10-18 21:06:41,125:INFO:Initializing predict_model()
2025-10-18 21:06:41,126:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6380210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A63EDB20>)
2025-10-18 21:06:41,126:INFO:Checking exceptions
2025-10-18 21:06:41,126:INFO:Preloading libraries
2025-10-18 21:06:41,126:INFO:Set up data.
2025-10-18 21:06:41,136:INFO:Set up index.
2025-10-18 21:06:42,634:INFO:Initializing predict_model()
2025-10-18 21:06:42,634:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A640EB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A63ED800>)
2025-10-18 21:06:42,634:INFO:Checking exceptions
2025-10-18 21:06:42,634:INFO:Preloading libraries
2025-10-18 21:06:42,636:INFO:Set up data.
2025-10-18 21:06:42,642:INFO:Set up index.
2025-10-18 21:06:45,061:INFO:Initializing predict_model()
2025-10-18 21:06:45,063:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6A34210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A61BD800>)
2025-10-18 21:06:45,063:INFO:Checking exceptions
2025-10-18 21:06:45,064:INFO:Preloading libraries
2025-10-18 21:06:45,064:INFO:Set up data.
2025-10-18 21:06:45,067:INFO:Set up index.
2025-10-18 21:06:51,524:INFO:Initializing predict_model()
2025-10-18 21:06:51,524:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6A34290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A66C1800>)
2025-10-18 21:06:51,524:INFO:Checking exceptions
2025-10-18 21:06:51,524:INFO:Preloading libraries
2025-10-18 21:06:51,525:INFO:Set up data.
2025-10-18 21:06:51,533:INFO:Set up index.
2025-10-18 21:07:00,587:INFO:Initializing predict_model()
2025-10-18 21:07:00,588:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A638F050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A66C3CE0>)
2025-10-18 21:07:00,588:INFO:Checking exceptions
2025-10-18 21:07:00,588:INFO:Preloading libraries
2025-10-18 21:07:00,588:INFO:Set up data.
2025-10-18 21:07:00,592:INFO:Set up index.
2025-10-18 21:07:05,123:INFO:Initializing predict_model()
2025-10-18 21:07:05,123:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6394D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A66B9440>)
2025-10-18 21:07:05,123:INFO:Checking exceptions
2025-10-18 21:07:05,124:INFO:Preloading libraries
2025-10-18 21:07:05,124:INFO:Set up data.
2025-10-18 21:07:05,127:INFO:Set up index.
2025-10-18 21:07:07,911:INFO:Initializing predict_model()
2025-10-18 21:07:07,912:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6394BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A66BAD40>)
2025-10-18 21:07:07,912:INFO:Checking exceptions
2025-10-18 21:07:07,912:INFO:Preloading libraries
2025-10-18 21:07:07,912:INFO:Set up data.
2025-10-18 21:07:07,915:INFO:Set up index.
2025-10-18 21:07:09,237:INFO:Initializing predict_model()
2025-10-18 21:07:09,237:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63C0110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6694360>)
2025-10-18 21:07:09,237:INFO:Checking exceptions
2025-10-18 21:07:09,237:INFO:Preloading libraries
2025-10-18 21:07:09,237:INFO:Set up data.
2025-10-18 21:07:09,241:INFO:Set up index.
2025-10-18 21:07:12,841:INFO:Initializing predict_model()
2025-10-18 21:07:12,841:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63C2C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A66959E0>)
2025-10-18 21:07:12,841:INFO:Checking exceptions
2025-10-18 21:07:12,842:INFO:Preloading libraries
2025-10-18 21:07:12,842:INFO:Set up data.
2025-10-18 21:07:12,847:INFO:Set up index.
2025-10-18 21:07:17,910:INFO:Initializing predict_model()
2025-10-18 21:07:17,910:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63C02D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6418F40>)
2025-10-18 21:07:17,910:INFO:Checking exceptions
2025-10-18 21:07:17,910:INFO:Preloading libraries
2025-10-18 21:07:17,911:INFO:Set up data.
2025-10-18 21:07:17,914:INFO:Set up index.
2025-10-18 21:07:22,362:INFO:Initializing predict_model()
2025-10-18 21:07:22,362:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63E6090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A66844A0>)
2025-10-18 21:07:22,362:INFO:Checking exceptions
2025-10-18 21:07:22,362:INFO:Preloading libraries
2025-10-18 21:07:22,363:INFO:Set up data.
2025-10-18 21:07:22,366:INFO:Set up index.
2025-10-18 21:07:27,682:INFO:Initializing predict_model()
2025-10-18 21:07:27,682:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63C4A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6694400>)
2025-10-18 21:07:27,682:INFO:Checking exceptions
2025-10-18 21:07:27,683:INFO:Preloading libraries
2025-10-18 21:07:27,683:INFO:Set up data.
2025-10-18 21:07:27,688:INFO:Set up index.
2025-10-18 21:07:40,623:INFO:Initializing predict_model()
2025-10-18 21:07:40,624:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6412610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A666A660>)
2025-10-18 21:07:40,624:INFO:Checking exceptions
2025-10-18 21:07:40,624:INFO:Preloading libraries
2025-10-18 21:07:40,625:INFO:Set up data.
2025-10-18 21:07:40,628:INFO:Set up index.
2025-10-18 21:08:07,823:INFO:Initializing predict_model()
2025-10-18 21:08:07,823:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63B28D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A66671A0>)
2025-10-18 21:08:07,823:INFO:Checking exceptions
2025-10-18 21:08:07,823:INFO:Preloading libraries
2025-10-18 21:08:07,824:INFO:Set up data.
2025-10-18 21:08:07,828:INFO:Set up index.
2025-10-18 21:08:10,762:INFO:Initializing predict_model()
2025-10-18 21:08:10,762:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A61A7F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6539080>)
2025-10-18 21:08:10,762:INFO:Checking exceptions
2025-10-18 21:08:10,763:INFO:Preloading libraries
2025-10-18 21:08:10,763:INFO:Set up data.
2025-10-18 21:08:10,769:INFO:Set up index.
2025-10-18 21:08:14,960:INFO:Initializing predict_model()
2025-10-18 21:08:14,960:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63B1A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6538720>)
2025-10-18 21:08:14,961:INFO:Checking exceptions
2025-10-18 21:08:14,961:INFO:Preloading libraries
2025-10-18 21:08:14,961:INFO:Set up data.
2025-10-18 21:08:14,971:INFO:Set up index.
2025-10-18 21:10:46,792:INFO:Initializing load_model()
2025-10-18 21:10:46,792:INFO:load_model(model_name=fin, platform=None, authentication=None, verbose=True)
2025-10-18 21:10:46,939:INFO:Initializing predict_model()
2025-10-18 21:10:46,939:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A64E1D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A64198A0>)
2025-10-18 21:10:46,939:INFO:Checking exceptions
2025-10-18 21:10:46,939:INFO:Preloading libraries
2025-10-18 21:10:46,940:INFO:Set up data.
2025-10-18 21:10:46,943:INFO:Set up index.
2025-10-18 21:10:51,672:INFO:Initializing predict_model()
2025-10-18 21:10:51,672:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6199D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A65707C0>)
2025-10-18 21:10:51,672:INFO:Checking exceptions
2025-10-18 21:10:51,672:INFO:Preloading libraries
2025-10-18 21:10:51,672:INFO:Set up data.
2025-10-18 21:10:51,678:INFO:Set up index.
2025-10-18 21:10:52,132:INFO:Initializing predict_model()
2025-10-18 21:10:52,132:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A64F2790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6571F80>)
2025-10-18 21:10:52,133:INFO:Checking exceptions
2025-10-18 21:10:52,133:INFO:Preloading libraries
2025-10-18 21:10:52,133:INFO:Set up data.
2025-10-18 21:10:52,140:INFO:Set up index.
2025-10-18 21:10:53,164:INFO:Initializing predict_model()
2025-10-18 21:10:53,164:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6427C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6573BA0>)
2025-10-18 21:10:53,165:INFO:Checking exceptions
2025-10-18 21:10:53,165:INFO:Preloading libraries
2025-10-18 21:10:53,165:INFO:Set up data.
2025-10-18 21:10:53,169:INFO:Set up index.
2025-10-18 21:10:59,104:INFO:Initializing predict_model()
2025-10-18 21:10:59,104:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63F1110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A64A5260>)
2025-10-18 21:10:59,104:INFO:Checking exceptions
2025-10-18 21:10:59,104:INFO:Preloading libraries
2025-10-18 21:10:59,105:INFO:Set up data.
2025-10-18 21:10:59,108:INFO:Set up index.
2025-10-18 21:11:06,104:INFO:Initializing predict_model()
2025-10-18 21:11:06,104:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63C07D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A64A6DE0>)
2025-10-18 21:11:06,104:INFO:Checking exceptions
2025-10-18 21:11:06,105:INFO:Preloading libraries
2025-10-18 21:11:06,105:INFO:Set up data.
2025-10-18 21:11:06,112:INFO:Set up index.
2025-10-18 21:11:06,591:INFO:Initializing predict_model()
2025-10-18 21:11:06,591:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63F0D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6494360>)
2025-10-18 21:11:06,591:INFO:Checking exceptions
2025-10-18 21:11:06,591:INFO:Preloading libraries
2025-10-18 21:11:06,592:INFO:Set up data.
2025-10-18 21:11:06,595:INFO:Set up index.
2025-10-18 21:11:07,072:INFO:Initializing predict_model()
2025-10-18 21:11:07,072:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63B3650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6495EE0>)
2025-10-18 21:11:07,072:INFO:Checking exceptions
2025-10-18 21:11:07,072:INFO:Preloading libraries
2025-10-18 21:11:07,072:INFO:Set up data.
2025-10-18 21:11:07,077:INFO:Set up index.
2025-10-18 21:11:07,786:INFO:Initializing predict_model()
2025-10-18 21:11:07,786:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A655CCD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6497740>)
2025-10-18 21:11:07,786:INFO:Checking exceptions
2025-10-18 21:11:07,786:INFO:Preloading libraries
2025-10-18 21:11:07,787:INFO:Set up data.
2025-10-18 21:11:07,790:INFO:Set up index.
2025-10-18 21:11:08,230:INFO:Initializing predict_model()
2025-10-18 21:11:08,230:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63AE290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A64E8E00>)
2025-10-18 21:11:08,230:INFO:Checking exceptions
2025-10-18 21:11:08,232:INFO:Preloading libraries
2025-10-18 21:11:08,233:INFO:Set up data.
2025-10-18 21:11:08,236:INFO:Set up index.
2025-10-18 21:11:08,726:INFO:Initializing predict_model()
2025-10-18 21:11:08,726:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A655F810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A64EA5C0>)
2025-10-18 21:11:08,726:INFO:Checking exceptions
2025-10-18 21:11:08,726:INFO:Preloading libraries
2025-10-18 21:11:08,727:INFO:Set up data.
2025-10-18 21:11:08,738:INFO:Set up index.
2025-10-18 21:11:09,725:INFO:Initializing predict_model()
2025-10-18 21:11:09,725:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A61AEBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6514220>)
2025-10-18 21:11:09,725:INFO:Checking exceptions
2025-10-18 21:11:09,725:INFO:Preloading libraries
2025-10-18 21:11:09,726:INFO:Set up data.
2025-10-18 21:11:09,730:INFO:Set up index.
2025-10-18 21:11:10,171:INFO:Initializing predict_model()
2025-10-18 21:11:10,171:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63F1910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6515940>)
2025-10-18 21:11:10,171:INFO:Checking exceptions
2025-10-18 21:11:10,171:INFO:Preloading libraries
2025-10-18 21:11:10,171:INFO:Set up data.
2025-10-18 21:11:10,184:INFO:Set up index.
2025-10-18 21:11:10,884:INFO:Initializing predict_model()
2025-10-18 21:11:10,884:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63AE510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A666B380>)
2025-10-18 21:11:10,884:INFO:Checking exceptions
2025-10-18 21:11:10,884:INFO:Preloading libraries
2025-10-18 21:11:10,885:INFO:Set up data.
2025-10-18 21:11:10,888:INFO:Set up index.
2025-10-18 21:11:25,020:INFO:Initializing predict_model()
2025-10-18 21:11:25,021:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A650EED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A675D080>)
2025-10-18 21:11:25,021:INFO:Checking exceptions
2025-10-18 21:11:25,021:INFO:Preloading libraries
2025-10-18 21:11:25,022:INFO:Set up data.
2025-10-18 21:11:25,026:INFO:Set up index.
2025-10-18 21:11:25,314:INFO:Initializing predict_model()
2025-10-18 21:11:25,314:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A650CB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A65176A0>)
2025-10-18 21:11:25,314:INFO:Checking exceptions
2025-10-18 21:11:25,314:INFO:Preloading libraries
2025-10-18 21:11:25,314:INFO:Set up data.
2025-10-18 21:11:25,318:INFO:Set up index.
2025-10-18 21:11:30,457:INFO:Initializing predict_model()
2025-10-18 21:11:30,457:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A64F2C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A675C860>)
2025-10-18 21:11:30,457:INFO:Checking exceptions
2025-10-18 21:11:30,457:INFO:Preloading libraries
2025-10-18 21:11:30,457:INFO:Set up data.
2025-10-18 21:11:30,460:INFO:Set up index.
2025-10-18 21:11:30,695:INFO:Initializing predict_model()
2025-10-18 21:11:30,695:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6424650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A64A6AC0>)
2025-10-18 21:11:30,695:INFO:Checking exceptions
2025-10-18 21:11:30,695:INFO:Preloading libraries
2025-10-18 21:11:30,695:INFO:Set up data.
2025-10-18 21:11:30,699:INFO:Set up index.
2025-10-18 21:11:44,408:INFO:Initializing predict_model()
2025-10-18 21:11:44,409:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6768FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A675E2A0>)
2025-10-18 21:11:44,410:INFO:Checking exceptions
2025-10-18 21:11:44,410:INFO:Preloading libraries
2025-10-18 21:11:44,410:INFO:Set up data.
2025-10-18 21:11:44,415:INFO:Set up index.
2025-10-18 21:11:47,293:INFO:Initializing predict_model()
2025-10-18 21:11:47,293:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A67697D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6739080>)
2025-10-18 21:11:47,294:INFO:Checking exceptions
2025-10-18 21:11:47,294:INFO:Preloading libraries
2025-10-18 21:11:47,294:INFO:Set up data.
2025-10-18 21:11:47,298:INFO:Set up index.
2025-10-18 21:11:49,316:INFO:Initializing predict_model()
2025-10-18 21:11:49,317:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6769450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A673A700>)
2025-10-18 21:11:49,317:INFO:Checking exceptions
2025-10-18 21:11:49,318:INFO:Preloading libraries
2025-10-18 21:11:49,318:INFO:Set up data.
2025-10-18 21:11:49,324:INFO:Set up index.
2025-10-18 21:11:57,743:INFO:Initializing predict_model()
2025-10-18 21:11:57,744:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A650F590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A67A02C0>)
2025-10-18 21:11:57,744:INFO:Checking exceptions
2025-10-18 21:11:57,744:INFO:Preloading libraries
2025-10-18 21:11:57,744:INFO:Set up data.
2025-10-18 21:11:57,752:INFO:Set up index.
2025-10-18 21:11:57,998:INFO:Initializing predict_model()
2025-10-18 21:11:57,998:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A64CD550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A65144A0>)
2025-10-18 21:11:57,998:INFO:Checking exceptions
2025-10-18 21:11:57,998:INFO:Preloading libraries
2025-10-18 21:11:57,998:INFO:Set up data.
2025-10-18 21:11:58,001:INFO:Set up index.
2025-10-18 21:12:02,761:INFO:Initializing predict_model()
2025-10-18 21:12:02,761:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A67B3A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A67A1080>)
2025-10-18 21:12:02,761:INFO:Checking exceptions
2025-10-18 21:12:02,762:INFO:Preloading libraries
2025-10-18 21:12:02,762:INFO:Set up data.
2025-10-18 21:12:02,766:INFO:Set up index.
2025-10-18 21:12:04,563:INFO:Initializing predict_model()
2025-10-18 21:12:04,563:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A676AC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A67A3A60>)
2025-10-18 21:12:04,563:INFO:Checking exceptions
2025-10-18 21:12:04,564:INFO:Preloading libraries
2025-10-18 21:12:04,564:INFO:Set up data.
2025-10-18 21:12:04,568:INFO:Set up index.
2025-10-18 21:12:04,816:INFO:Initializing predict_model()
2025-10-18 21:12:04,816:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63F2450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A64EBCE0>)
2025-10-18 21:12:04,816:INFO:Checking exceptions
2025-10-18 21:12:04,816:INFO:Preloading libraries
2025-10-18 21:12:04,817:INFO:Set up data.
2025-10-18 21:12:04,821:INFO:Set up index.
2025-10-18 21:12:11,999:INFO:Initializing predict_model()
2025-10-18 21:12:11,999:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A65652D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A67D8A40>)
2025-10-18 21:12:11,999:INFO:Checking exceptions
2025-10-18 21:12:12,000:INFO:Preloading libraries
2025-10-18 21:12:12,000:INFO:Set up data.
2025-10-18 21:12:12,004:INFO:Set up index.
2025-10-18 21:12:12,285:INFO:Initializing predict_model()
2025-10-18 21:12:12,285:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A64F04D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A64EB740>)
2025-10-18 21:12:12,285:INFO:Checking exceptions
2025-10-18 21:12:12,286:INFO:Preloading libraries
2025-10-18 21:12:12,286:INFO:Set up data.
2025-10-18 21:12:12,289:INFO:Set up index.
2025-10-18 21:12:15,184:INFO:Initializing predict_model()
2025-10-18 21:12:15,185:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6566CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A67D9760>)
2025-10-18 21:12:15,186:INFO:Checking exceptions
2025-10-18 21:12:15,186:INFO:Preloading libraries
2025-10-18 21:12:15,186:INFO:Set up data.
2025-10-18 21:12:15,190:INFO:Set up index.
2025-10-18 21:12:15,442:INFO:Initializing predict_model()
2025-10-18 21:12:15,442:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A655CC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A673A8E0>)
2025-10-18 21:12:15,442:INFO:Checking exceptions
2025-10-18 21:12:15,442:INFO:Preloading libraries
2025-10-18 21:12:15,443:INFO:Set up data.
2025-10-18 21:12:15,446:INFO:Set up index.
2025-10-18 21:13:57,813:INFO:Initializing predict_model()
2025-10-18 21:13:57,814:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A64CCD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A67D9940>)
2025-10-18 21:13:57,814:INFO:Checking exceptions
2025-10-18 21:13:57,814:INFO:Preloading libraries
2025-10-18 21:13:57,815:INFO:Set up data.
2025-10-18 21:13:57,818:INFO:Set up index.
2025-10-18 21:14:03,297:INFO:Initializing predict_model()
2025-10-18 21:14:03,298:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63B2250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6836840>)
2025-10-18 21:14:03,298:INFO:Checking exceptions
2025-10-18 21:14:03,298:INFO:Preloading libraries
2025-10-18 21:14:03,298:INFO:Set up data.
2025-10-18 21:14:03,303:INFO:Set up index.
2025-10-18 21:14:12,705:INFO:Initializing predict_model()
2025-10-18 21:14:12,706:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63B0110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6837420>)
2025-10-18 21:14:12,706:INFO:Checking exceptions
2025-10-18 21:14:12,706:INFO:Preloading libraries
2025-10-18 21:14:12,706:INFO:Set up data.
2025-10-18 21:14:12,711:INFO:Set up index.
2025-10-18 21:14:17,774:INFO:Initializing predict_model()
2025-10-18 21:14:17,774:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A67D4590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6814D60>)
2025-10-18 21:14:17,775:INFO:Checking exceptions
2025-10-18 21:14:17,775:INFO:Preloading libraries
2025-10-18 21:14:17,775:INFO:Set up data.
2025-10-18 21:14:17,781:INFO:Set up index.
2025-10-18 21:14:18,258:INFO:Initializing predict_model()
2025-10-18 21:14:18,258:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A650F510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6816340>)
2025-10-18 21:14:18,259:INFO:Checking exceptions
2025-10-18 21:14:18,259:INFO:Preloading libraries
2025-10-18 21:14:18,259:INFO:Set up data.
2025-10-18 21:14:18,269:INFO:Set up index.
2025-10-18 21:14:19,160:INFO:Initializing predict_model()
2025-10-18 21:14:19,160:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A67D6B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6817BA0>)
2025-10-18 21:14:19,160:INFO:Checking exceptions
2025-10-18 21:14:19,160:INFO:Preloading libraries
2025-10-18 21:14:19,161:INFO:Set up data.
2025-10-18 21:14:19,165:INFO:Set up index.
2025-10-18 21:14:20,522:INFO:Initializing predict_model()
2025-10-18 21:14:20,523:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A67D4CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A67A3600>)
2025-10-18 21:14:20,523:INFO:Checking exceptions
2025-10-18 21:14:20,523:INFO:Preloading libraries
2025-10-18 21:14:20,523:INFO:Set up data.
2025-10-18 21:14:20,526:INFO:Set up index.
2025-10-18 21:14:25,137:INFO:Initializing predict_model()
2025-10-18 21:14:25,137:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A64E3090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6916CA0>)
2025-10-18 21:14:25,137:INFO:Checking exceptions
2025-10-18 21:14:25,138:INFO:Preloading libraries
2025-10-18 21:14:25,138:INFO:Set up data.
2025-10-18 21:14:25,143:INFO:Set up index.
2025-10-18 21:14:39,105:INFO:Initializing predict_model()
2025-10-18 21:14:39,105:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6821950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A68F80E0>)
2025-10-18 21:14:39,105:INFO:Checking exceptions
2025-10-18 21:14:39,105:INFO:Preloading libraries
2025-10-18 21:14:39,106:INFO:Set up data.
2025-10-18 21:14:39,109:INFO:Set up index.
2025-10-18 21:14:39,367:INFO:Initializing predict_model()
2025-10-18 21:14:39,368:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A61A4B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A68F8860>)
2025-10-18 21:14:39,368:INFO:Checking exceptions
2025-10-18 21:14:39,368:INFO:Preloading libraries
2025-10-18 21:14:39,368:INFO:Set up data.
2025-10-18 21:14:39,371:INFO:Set up index.
2025-10-18 21:14:42,610:INFO:Initializing predict_model()
2025-10-18 21:14:42,610:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A682CD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A68FBCE0>)
2025-10-18 21:14:42,610:INFO:Checking exceptions
2025-10-18 21:14:42,610:INFO:Preloading libraries
2025-10-18 21:14:42,611:INFO:Set up data.
2025-10-18 21:14:42,614:INFO:Set up index.
2025-10-18 21:14:42,863:INFO:Initializing predict_model()
2025-10-18 21:14:42,864:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A64E34D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A67DBF60>)
2025-10-18 21:14:42,864:INFO:Checking exceptions
2025-10-18 21:14:42,864:INFO:Preloading libraries
2025-10-18 21:14:42,865:INFO:Set up data.
2025-10-18 21:14:42,869:INFO:Set up index.
2025-10-18 21:14:50,077:INFO:Initializing predict_model()
2025-10-18 21:14:50,077:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A650EA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A68F8B80>)
2025-10-18 21:14:50,077:INFO:Checking exceptions
2025-10-18 21:14:50,078:INFO:Preloading libraries
2025-10-18 21:14:50,079:INFO:Set up data.
2025-10-18 21:14:50,083:INFO:Set up index.
2025-10-18 21:14:53,869:INFO:Initializing predict_model()
2025-10-18 21:14:53,870:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6769790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A68FAC00>)
2025-10-18 21:14:53,870:INFO:Checking exceptions
2025-10-18 21:14:53,870:INFO:Preloading libraries
2025-10-18 21:14:53,871:INFO:Set up data.
2025-10-18 21:14:53,874:INFO:Set up index.
2025-10-18 21:14:54,138:INFO:Initializing predict_model()
2025-10-18 21:14:54,139:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A65670D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A68371A0>)
2025-10-18 21:14:54,140:INFO:Checking exceptions
2025-10-18 21:14:54,140:INFO:Preloading libraries
2025-10-18 21:14:54,140:INFO:Set up data.
2025-10-18 21:14:54,144:INFO:Set up index.
2025-10-18 21:15:15,649:INFO:Initializing predict_model()
2025-10-18 21:15:15,649:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A67695D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6916340>)
2025-10-18 21:15:15,649:INFO:Checking exceptions
2025-10-18 21:15:15,649:INFO:Preloading libraries
2025-10-18 21:15:15,649:INFO:Set up data.
2025-10-18 21:15:15,660:INFO:Set up index.
2025-10-18 21:17:15,967:INFO:Initializing predict_model()
2025-10-18 21:17:15,967:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A2EB1950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A68E20C0>)
2025-10-18 21:17:15,967:INFO:Checking exceptions
2025-10-18 21:17:15,967:INFO:Preloading libraries
2025-10-18 21:17:15,968:INFO:Set up data.
2025-10-18 21:17:15,971:INFO:Set up index.
2025-10-18 21:17:23,116:INFO:Initializing predict_model()
2025-10-18 21:17:23,116:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A684AE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A689D4E0>)
2025-10-18 21:17:23,116:INFO:Checking exceptions
2025-10-18 21:17:23,116:INFO:Preloading libraries
2025-10-18 21:17:23,117:INFO:Set up data.
2025-10-18 21:17:23,122:INFO:Set up index.
2025-10-18 21:17:28,488:INFO:Initializing predict_model()
2025-10-18 21:17:28,489:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A682D2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A689F420>)
2025-10-18 21:17:28,490:INFO:Checking exceptions
2025-10-18 21:17:28,490:INFO:Preloading libraries
2025-10-18 21:17:28,490:INFO:Set up data.
2025-10-18 21:17:28,497:INFO:Set up index.
2025-10-18 21:17:28,948:INFO:Initializing predict_model()
2025-10-18 21:17:28,948:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A683F710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A68A4720>)
2025-10-18 21:17:28,948:INFO:Checking exceptions
2025-10-18 21:17:28,948:INFO:Preloading libraries
2025-10-18 21:17:28,949:INFO:Set up data.
2025-10-18 21:17:28,952:INFO:Set up index.
2025-10-18 21:17:31,155:INFO:Initializing predict_model()
2025-10-18 21:17:31,155:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A676A0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A68A60C0>)
2025-10-18 21:17:31,156:INFO:Checking exceptions
2025-10-18 21:17:31,156:INFO:Preloading libraries
2025-10-18 21:17:31,156:INFO:Set up data.
2025-10-18 21:17:31,159:INFO:Set up index.
2025-10-18 21:17:35,394:INFO:Initializing predict_model()
2025-10-18 21:17:35,394:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6848B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A68A7920>)
2025-10-18 21:17:35,395:INFO:Checking exceptions
2025-10-18 21:17:35,395:INFO:Preloading libraries
2025-10-18 21:17:35,397:INFO:Set up data.
2025-10-18 21:17:35,403:INFO:Set up index.
2025-10-18 21:17:38,057:INFO:Initializing predict_model()
2025-10-18 21:17:38,058:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A687B9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7AF9080>)
2025-10-18 21:17:38,058:INFO:Checking exceptions
2025-10-18 21:17:38,058:INFO:Preloading libraries
2025-10-18 21:17:38,058:INFO:Set up data.
2025-10-18 21:17:38,063:INFO:Set up index.
2025-10-18 21:17:41,552:INFO:Initializing predict_model()
2025-10-18 21:17:41,552:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6880A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7AFA700>)
2025-10-18 21:17:41,552:INFO:Checking exceptions
2025-10-18 21:17:41,552:INFO:Preloading libraries
2025-10-18 21:17:41,553:INFO:Set up data.
2025-10-18 21:17:41,556:INFO:Set up index.
2025-10-18 21:17:43,482:INFO:Initializing predict_model()
2025-10-18 21:17:43,483:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6880B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A68FBD80>)
2025-10-18 21:17:43,483:INFO:Checking exceptions
2025-10-18 21:17:43,483:INFO:Preloading libraries
2025-10-18 21:17:43,483:INFO:Set up data.
2025-10-18 21:17:43,487:INFO:Set up index.
2025-10-18 21:17:44,842:INFO:Initializing predict_model()
2025-10-18 21:17:44,842:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6878C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7B058A0>)
2025-10-18 21:17:44,842:INFO:Checking exceptions
2025-10-18 21:17:44,843:INFO:Preloading libraries
2025-10-18 21:17:44,845:INFO:Set up data.
2025-10-18 21:17:44,849:INFO:Set up index.
2025-10-18 21:17:47,432:INFO:Initializing predict_model()
2025-10-18 21:17:47,432:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6879010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7B06D40>)
2025-10-18 21:17:47,433:INFO:Checking exceptions
2025-10-18 21:17:47,433:INFO:Preloading libraries
2025-10-18 21:17:47,433:INFO:Set up data.
2025-10-18 21:17:47,437:INFO:Set up index.
2025-10-18 21:17:50,081:INFO:Initializing predict_model()
2025-10-18 21:17:50,081:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7AEE710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6917B00>)
2025-10-18 21:17:50,081:INFO:Checking exceptions
2025-10-18 21:17:50,081:INFO:Preloading libraries
2025-10-18 21:17:50,082:INFO:Set up data.
2025-10-18 21:17:50,086:INFO:Set up index.
2025-10-18 21:17:50,360:INFO:Initializing predict_model()
2025-10-18 21:17:50,360:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A682E9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A68A5C60>)
2025-10-18 21:17:50,360:INFO:Checking exceptions
2025-10-18 21:17:50,361:INFO:Preloading libraries
2025-10-18 21:17:50,361:INFO:Set up data.
2025-10-18 21:17:50,364:INFO:Set up index.
2025-10-18 21:17:53,123:INFO:Initializing predict_model()
2025-10-18 21:17:53,123:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7AED510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6917B00>)
2025-10-18 21:17:53,124:INFO:Checking exceptions
2025-10-18 21:17:53,125:INFO:Preloading libraries
2025-10-18 21:17:53,125:INFO:Set up data.
2025-10-18 21:17:53,130:INFO:Set up index.
2025-10-18 21:17:53,383:INFO:Initializing predict_model()
2025-10-18 21:17:53,383:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A67489D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7B25A80>)
2025-10-18 21:17:53,383:INFO:Checking exceptions
2025-10-18 21:17:53,383:INFO:Preloading libraries
2025-10-18 21:17:53,383:INFO:Set up data.
2025-10-18 21:17:53,386:INFO:Set up index.
2025-10-18 21:17:58,368:INFO:Initializing predict_model()
2025-10-18 21:17:58,369:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6768290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7B27A60>)
2025-10-18 21:17:58,369:INFO:Checking exceptions
2025-10-18 21:17:58,369:INFO:Preloading libraries
2025-10-18 21:17:58,370:INFO:Set up data.
2025-10-18 21:17:58,373:INFO:Set up index.
2025-10-18 21:17:58,638:INFO:Initializing predict_model()
2025-10-18 21:17:58,638:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A682C210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A68FADE0>)
2025-10-18 21:17:58,638:INFO:Checking exceptions
2025-10-18 21:17:58,638:INFO:Preloading libraries
2025-10-18 21:17:58,638:INFO:Set up data.
2025-10-18 21:17:58,642:INFO:Set up index.
2025-10-18 21:18:01,314:INFO:Initializing predict_model()
2025-10-18 21:18:01,314:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6849E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7AFBEC0>)
2025-10-18 21:18:01,314:INFO:Checking exceptions
2025-10-18 21:18:01,314:INFO:Preloading libraries
2025-10-18 21:18:01,315:INFO:Set up data.
2025-10-18 21:18:01,318:INFO:Set up index.
2025-10-18 21:18:04,179:INFO:Initializing predict_model()
2025-10-18 21:18:04,180:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63B0F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A689F560>)
2025-10-18 21:18:04,180:INFO:Checking exceptions
2025-10-18 21:18:04,180:INFO:Preloading libraries
2025-10-18 21:18:04,180:INFO:Set up data.
2025-10-18 21:18:04,184:INFO:Set up index.
2025-10-18 21:18:06,452:INFO:Initializing predict_model()
2025-10-18 21:18:06,452:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6879890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7B5FD80>)
2025-10-18 21:18:06,452:INFO:Checking exceptions
2025-10-18 21:18:06,452:INFO:Preloading libraries
2025-10-18 21:18:06,452:INFO:Set up data.
2025-10-18 21:18:06,456:INFO:Set up index.
2025-10-18 21:18:06,751:INFO:Initializing predict_model()
2025-10-18 21:18:06,752:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6879190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7B263E0>)
2025-10-18 21:18:06,752:INFO:Checking exceptions
2025-10-18 21:18:06,752:INFO:Preloading libraries
2025-10-18 21:18:06,753:INFO:Set up data.
2025-10-18 21:18:06,757:INFO:Set up index.
2025-10-18 21:18:30,781:INFO:Initializing predict_model()
2025-10-18 21:18:30,783:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7B41F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A68FAC00>)
2025-10-18 21:18:30,783:INFO:Checking exceptions
2025-10-18 21:18:30,783:INFO:Preloading libraries
2025-10-18 21:18:30,784:INFO:Set up data.
2025-10-18 21:18:30,788:INFO:Set up index.
2025-10-18 21:18:31,058:INFO:Initializing predict_model()
2025-10-18 21:18:31,058:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6881D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7B5FA60>)
2025-10-18 21:18:31,058:INFO:Checking exceptions
2025-10-18 21:18:31,059:INFO:Preloading libraries
2025-10-18 21:18:31,059:INFO:Set up data.
2025-10-18 21:18:31,065:INFO:Set up index.
2025-10-18 21:22:14,838:INFO:Initializing predict_model()
2025-10-18 21:22:14,839:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A682CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7B85BC0>)
2025-10-18 21:22:14,839:INFO:Checking exceptions
2025-10-18 21:22:14,839:INFO:Preloading libraries
2025-10-18 21:22:14,840:INFO:Set up data.
2025-10-18 21:22:14,845:INFO:Set up index.
2025-10-18 21:22:15,181:INFO:Initializing predict_model()
2025-10-18 21:22:15,183:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6768F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7AFA3E0>)
2025-10-18 21:22:15,183:INFO:Checking exceptions
2025-10-18 21:22:15,183:INFO:Preloading libraries
2025-10-18 21:22:15,183:INFO:Set up data.
2025-10-18 21:22:15,187:INFO:Set up index.
2025-10-18 21:24:30,314:INFO:Initializing predict_model()
2025-10-18 21:24:30,314:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A67D54D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7BD0400>)
2025-10-18 21:24:30,315:INFO:Checking exceptions
2025-10-18 21:24:30,315:INFO:Preloading libraries
2025-10-18 21:24:30,315:INFO:Set up data.
2025-10-18 21:24:30,318:INFO:Set up index.
2025-10-18 21:24:34,229:INFO:Initializing predict_model()
2025-10-18 21:24:34,229:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6879C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7BD23E0>)
2025-10-18 21:24:34,229:INFO:Checking exceptions
2025-10-18 21:24:34,229:INFO:Preloading libraries
2025-10-18 21:24:34,229:INFO:Set up data.
2025-10-18 21:24:34,233:INFO:Set up index.
2025-10-18 21:24:34,492:INFO:Initializing predict_model()
2025-10-18 21:24:34,492:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A67D7B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7BD25C0>)
2025-10-18 21:24:34,493:INFO:Checking exceptions
2025-10-18 21:24:34,493:INFO:Preloading libraries
2025-10-18 21:24:34,494:INFO:Set up data.
2025-10-18 21:24:34,497:INFO:Set up index.
2025-10-18 21:24:37,220:INFO:Initializing predict_model()
2025-10-18 21:24:37,222:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6848DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7BD2020>)
2025-10-18 21:24:37,222:INFO:Checking exceptions
2025-10-18 21:24:37,222:INFO:Preloading libraries
2025-10-18 21:24:37,223:INFO:Set up data.
2025-10-18 21:24:37,227:INFO:Set up index.
2025-10-18 21:24:37,484:INFO:Initializing predict_model()
2025-10-18 21:24:37,484:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A682C3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A689E7A0>)
2025-10-18 21:24:37,485:INFO:Checking exceptions
2025-10-18 21:24:37,485:INFO:Preloading libraries
2025-10-18 21:24:37,485:INFO:Set up data.
2025-10-18 21:24:37,490:INFO:Set up index.
2025-10-18 21:24:39,764:INFO:Initializing predict_model()
2025-10-18 21:24:39,764:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A684B310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7BD9080>)
2025-10-18 21:24:39,764:INFO:Checking exceptions
2025-10-18 21:24:39,764:INFO:Preloading libraries
2025-10-18 21:24:39,765:INFO:Set up data.
2025-10-18 21:24:39,768:INFO:Set up index.
2025-10-18 21:24:40,023:INFO:Initializing predict_model()
2025-10-18 21:24:40,024:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A655C7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7BD2CA0>)
2025-10-18 21:24:40,024:INFO:Checking exceptions
2025-10-18 21:24:40,024:INFO:Preloading libraries
2025-10-18 21:24:40,024:INFO:Set up data.
2025-10-18 21:24:40,028:INFO:Set up index.
2025-10-18 21:24:45,165:INFO:Initializing predict_model()
2025-10-18 21:24:45,165:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A687AB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A689F4C0>)
2025-10-18 21:24:45,165:INFO:Checking exceptions
2025-10-18 21:24:45,166:INFO:Preloading libraries
2025-10-18 21:24:45,167:INFO:Set up data.
2025-10-18 21:24:45,175:INFO:Set up index.
2025-10-18 21:24:48,442:INFO:Initializing predict_model()
2025-10-18 21:24:48,442:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7BA6950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7C0C220>)
2025-10-18 21:24:48,442:INFO:Checking exceptions
2025-10-18 21:24:48,443:INFO:Preloading libraries
2025-10-18 21:24:48,443:INFO:Set up data.
2025-10-18 21:24:48,446:INFO:Set up index.
2025-10-18 21:24:48,889:INFO:Initializing predict_model()
2025-10-18 21:24:48,889:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A684BF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7B263E0>)
2025-10-18 21:24:48,889:INFO:Checking exceptions
2025-10-18 21:24:48,889:INFO:Preloading libraries
2025-10-18 21:24:48,890:INFO:Set up data.
2025-10-18 21:24:48,893:INFO:Set up index.
2025-10-18 21:24:56,253:INFO:Initializing predict_model()
2025-10-18 21:24:56,253:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6878D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7C0E020>)
2025-10-18 21:24:56,254:INFO:Checking exceptions
2025-10-18 21:24:56,254:INFO:Preloading libraries
2025-10-18 21:24:56,254:INFO:Set up data.
2025-10-18 21:24:56,261:INFO:Set up index.
2025-10-18 21:24:56,897:INFO:Initializing predict_model()
2025-10-18 21:24:56,897:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7B41510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A5EE6660>)
2025-10-18 21:24:56,897:INFO:Checking exceptions
2025-10-18 21:24:56,897:INFO:Preloading libraries
2025-10-18 21:24:56,897:INFO:Set up data.
2025-10-18 21:24:56,901:INFO:Set up index.
2025-10-18 21:24:57,360:INFO:Initializing predict_model()
2025-10-18 21:24:57,360:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A676B7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7C0E0C0>)
2025-10-18 21:24:57,361:INFO:Checking exceptions
2025-10-18 21:24:57,361:INFO:Preloading libraries
2025-10-18 21:24:57,361:INFO:Set up data.
2025-10-18 21:24:57,365:INFO:Set up index.
2025-10-18 21:24:57,849:INFO:Initializing predict_model()
2025-10-18 21:24:57,855:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A676B4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7C0E3E0>)
2025-10-18 21:24:57,855:INFO:Checking exceptions
2025-10-18 21:24:57,855:INFO:Preloading libraries
2025-10-18 21:24:57,855:INFO:Set up data.
2025-10-18 21:24:57,876:INFO:Set up index.
2025-10-18 21:24:59,846:INFO:Initializing predict_model()
2025-10-18 21:24:59,846:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7BA3E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7C0E480>)
2025-10-18 21:24:59,846:INFO:Checking exceptions
2025-10-18 21:24:59,846:INFO:Preloading libraries
2025-10-18 21:24:59,847:INFO:Set up data.
2025-10-18 21:24:59,850:INFO:Set up index.
2025-10-18 21:25:00,592:INFO:Initializing predict_model()
2025-10-18 21:25:00,592:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A5E29610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7C0DE40>)
2025-10-18 21:25:00,593:INFO:Checking exceptions
2025-10-18 21:25:00,593:INFO:Preloading libraries
2025-10-18 21:25:00,593:INFO:Set up data.
2025-10-18 21:25:00,598:INFO:Set up index.
2025-10-18 21:28:04,358:INFO:Initializing load_model()
2025-10-18 21:28:04,358:INFO:load_model(model_name=fin, platform=None, authentication=None, verbose=True)
2025-10-18 21:28:04,450:INFO:Initializing predict_model()
2025-10-18 21:28:04,451:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7C65CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A5EE7560>)
2025-10-18 21:28:04,451:INFO:Checking exceptions
2025-10-18 21:28:04,451:INFO:Preloading libraries
2025-10-18 21:28:04,451:INFO:Set up data.
2025-10-18 21:28:04,457:INFO:Set up index.
2025-10-18 21:28:09,556:INFO:Initializing predict_model()
2025-10-18 21:28:09,557:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A5E4AA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6538F40>)
2025-10-18 21:28:09,557:INFO:Checking exceptions
2025-10-18 21:28:09,557:INFO:Preloading libraries
2025-10-18 21:28:09,557:INFO:Set up data.
2025-10-18 21:28:09,562:INFO:Set up index.
2025-10-18 21:28:22,602:INFO:Initializing predict_model()
2025-10-18 21:28:22,602:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7C67E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B295271760>)
2025-10-18 21:28:22,602:INFO:Checking exceptions
2025-10-18 21:28:22,602:INFO:Preloading libraries
2025-10-18 21:28:22,603:INFO:Set up data.
2025-10-18 21:28:22,607:INFO:Set up index.
2025-10-18 21:28:26,261:INFO:Initializing predict_model()
2025-10-18 21:28:26,261:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7AEDB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A5FC3240>)
2025-10-18 21:28:26,261:INFO:Checking exceptions
2025-10-18 21:28:26,261:INFO:Preloading libraries
2025-10-18 21:28:26,261:INFO:Set up data.
2025-10-18 21:28:26,264:INFO:Set up index.
2025-10-18 21:28:27,159:INFO:Initializing predict_model()
2025-10-18 21:28:27,159:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A5E4B4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A67D93A0>)
2025-10-18 21:28:27,159:INFO:Checking exceptions
2025-10-18 21:28:27,159:INFO:Preloading libraries
2025-10-18 21:28:27,160:INFO:Set up data.
2025-10-18 21:28:27,163:INFO:Set up index.
2025-10-18 21:28:28,039:INFO:Initializing predict_model()
2025-10-18 21:28:28,040:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7BA1F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A5FC2660>)
2025-10-18 21:28:28,040:INFO:Checking exceptions
2025-10-18 21:28:28,040:INFO:Preloading libraries
2025-10-18 21:28:28,040:INFO:Set up data.
2025-10-18 21:28:28,043:INFO:Set up index.
2025-10-18 21:28:31,980:INFO:Initializing predict_model()
2025-10-18 21:28:31,980:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7BA3010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7CA1DA0>)
2025-10-18 21:28:31,980:INFO:Checking exceptions
2025-10-18 21:28:31,980:INFO:Preloading libraries
2025-10-18 21:28:31,981:INFO:Set up data.
2025-10-18 21:28:31,984:INFO:Set up index.
2025-10-18 21:28:33,795:INFO:Initializing predict_model()
2025-10-18 21:28:33,795:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7BA3DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7CA2520>)
2025-10-18 21:28:33,795:INFO:Checking exceptions
2025-10-18 21:28:33,795:INFO:Preloading libraries
2025-10-18 21:28:33,795:INFO:Set up data.
2025-10-18 21:28:33,798:INFO:Set up index.
2025-10-18 21:28:35,175:INFO:Initializing predict_model()
2025-10-18 21:28:35,175:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A5E37B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A5F9F240>)
2025-10-18 21:28:35,175:INFO:Checking exceptions
2025-10-18 21:28:35,175:INFO:Preloading libraries
2025-10-18 21:28:35,175:INFO:Set up data.
2025-10-18 21:28:35,178:INFO:Set up index.
2025-10-18 21:28:38,261:INFO:Initializing predict_model()
2025-10-18 21:28:38,262:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A5E3F150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6538F40>)
2025-10-18 21:28:38,262:INFO:Checking exceptions
2025-10-18 21:28:38,262:INFO:Preloading libraries
2025-10-18 21:28:38,262:INFO:Set up data.
2025-10-18 21:28:38,266:INFO:Set up index.
2025-10-18 21:28:44,728:INFO:Initializing predict_model()
2025-10-18 21:28:44,729:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7BA1C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7CA19E0>)
2025-10-18 21:28:44,729:INFO:Checking exceptions
2025-10-18 21:28:44,729:INFO:Preloading libraries
2025-10-18 21:28:44,729:INFO:Set up data.
2025-10-18 21:28:44,733:INFO:Set up index.
2025-10-18 21:28:45,229:INFO:Initializing predict_model()
2025-10-18 21:28:45,229:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6A18250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7CA1440>)
2025-10-18 21:28:45,229:INFO:Checking exceptions
2025-10-18 21:28:45,229:INFO:Preloading libraries
2025-10-18 21:28:45,230:INFO:Set up data.
2025-10-18 21:28:45,234:INFO:Set up index.
2025-10-18 21:28:49,687:INFO:Initializing predict_model()
2025-10-18 21:28:49,687:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7C7D490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DAC4A0>)
2025-10-18 21:28:49,687:INFO:Checking exceptions
2025-10-18 21:28:49,687:INFO:Preloading libraries
2025-10-18 21:28:49,688:INFO:Set up data.
2025-10-18 21:28:49,691:INFO:Set up index.
2025-10-18 21:28:49,975:INFO:Initializing predict_model()
2025-10-18 21:28:49,976:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A61B7490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A61BCFE0>)
2025-10-18 21:28:49,976:INFO:Checking exceptions
2025-10-18 21:28:49,976:INFO:Preloading libraries
2025-10-18 21:28:49,976:INFO:Set up data.
2025-10-18 21:28:49,980:INFO:Set up index.
2025-10-18 21:29:11,434:INFO:Initializing predict_model()
2025-10-18 21:29:11,436:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7AEC350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A5FB3880>)
2025-10-18 21:29:11,436:INFO:Checking exceptions
2025-10-18 21:29:11,436:INFO:Preloading libraries
2025-10-18 21:29:11,437:INFO:Set up data.
2025-10-18 21:29:11,444:INFO:Set up index.
2025-10-18 21:29:12,097:INFO:Initializing predict_model()
2025-10-18 21:29:12,097:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A5E2CDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DAE980>)
2025-10-18 21:29:12,097:INFO:Checking exceptions
2025-10-18 21:29:12,097:INFO:Preloading libraries
2025-10-18 21:29:12,098:INFO:Set up data.
2025-10-18 21:29:12,101:INFO:Set up index.
2025-10-18 21:29:14,274:INFO:Initializing predict_model()
2025-10-18 21:29:14,274:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63C7C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DAEF20>)
2025-10-18 21:29:14,274:INFO:Checking exceptions
2025-10-18 21:29:14,274:INFO:Preloading libraries
2025-10-18 21:29:14,275:INFO:Set up data.
2025-10-18 21:29:14,278:INFO:Set up index.
2025-10-18 21:29:15,763:INFO:Initializing predict_model()
2025-10-18 21:29:15,764:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A5E50210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A5F83100>)
2025-10-18 21:29:15,764:INFO:Checking exceptions
2025-10-18 21:29:15,764:INFO:Preloading libraries
2025-10-18 21:29:15,764:INFO:Set up data.
2025-10-18 21:29:15,768:INFO:Set up index.
2025-10-18 21:29:18,807:INFO:Initializing predict_model()
2025-10-18 21:29:18,807:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6380710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A5F83420>)
2025-10-18 21:29:18,807:INFO:Checking exceptions
2025-10-18 21:29:18,807:INFO:Preloading libraries
2025-10-18 21:29:18,807:INFO:Set up data.
2025-10-18 21:29:18,811:INFO:Set up index.
2025-10-18 21:32:47,925:INFO:Initializing predict_model()
2025-10-18 21:32:47,925:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A5E512D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DAEC00>)
2025-10-18 21:32:47,925:INFO:Checking exceptions
2025-10-18 21:32:47,925:INFO:Preloading libraries
2025-10-18 21:32:47,926:INFO:Set up data.
2025-10-18 21:32:47,930:INFO:Set up index.
2025-10-18 21:32:48,225:INFO:Initializing predict_model()
2025-10-18 21:32:48,225:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6381950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A63EFC40>)
2025-10-18 21:32:48,225:INFO:Checking exceptions
2025-10-18 21:32:48,225:INFO:Preloading libraries
2025-10-18 21:32:48,225:INFO:Set up data.
2025-10-18 21:32:48,228:INFO:Set up index.
2025-10-18 21:32:50,470:INFO:Initializing predict_model()
2025-10-18 21:32:50,471:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63C7150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DAF740>)
2025-10-18 21:32:50,471:INFO:Checking exceptions
2025-10-18 21:32:50,471:INFO:Preloading libraries
2025-10-18 21:32:50,471:INFO:Set up data.
2025-10-18 21:32:50,475:INFO:Set up index.
2025-10-18 21:32:50,780:INFO:Initializing predict_model()
2025-10-18 21:32:50,780:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6383250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6186B60>)
2025-10-18 21:32:50,780:INFO:Checking exceptions
2025-10-18 21:32:50,780:INFO:Preloading libraries
2025-10-18 21:32:50,781:INFO:Set up data.
2025-10-18 21:32:50,785:INFO:Set up index.
2025-10-18 21:32:52,550:INFO:Initializing predict_model()
2025-10-18 21:32:52,550:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7C8D2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DAF6A0>)
2025-10-18 21:32:52,550:INFO:Checking exceptions
2025-10-18 21:32:52,550:INFO:Preloading libraries
2025-10-18 21:32:52,551:INFO:Set up data.
2025-10-18 21:32:52,554:INFO:Set up index.
2025-10-18 21:32:52,833:INFO:Initializing predict_model()
2025-10-18 21:32:52,833:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7C64690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2979FF100>)
2025-10-18 21:32:52,834:INFO:Checking exceptions
2025-10-18 21:32:52,834:INFO:Preloading libraries
2025-10-18 21:32:52,835:INFO:Set up data.
2025-10-18 21:32:52,838:INFO:Set up index.
2025-10-18 21:32:55,228:INFO:Initializing predict_model()
2025-10-18 21:32:55,228:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7BA7750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DAF560>)
2025-10-18 21:32:55,228:INFO:Checking exceptions
2025-10-18 21:32:55,228:INFO:Preloading libraries
2025-10-18 21:32:55,228:INFO:Set up data.
2025-10-18 21:32:55,232:INFO:Set up index.
2025-10-18 21:32:55,520:INFO:Initializing predict_model()
2025-10-18 21:32:55,520:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A640CC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A61BD080>)
2025-10-18 21:32:55,521:INFO:Checking exceptions
2025-10-18 21:32:55,521:INFO:Preloading libraries
2025-10-18 21:32:55,521:INFO:Set up data.
2025-10-18 21:32:55,525:INFO:Set up index.
2025-10-18 21:32:56,870:INFO:Initializing predict_model()
2025-10-18 21:32:56,870:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63FFB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D605E0>)
2025-10-18 21:32:56,870:INFO:Checking exceptions
2025-10-18 21:32:56,870:INFO:Preloading libraries
2025-10-18 21:32:56,871:INFO:Set up data.
2025-10-18 21:32:56,874:INFO:Set up index.
2025-10-18 21:32:57,141:INFO:Initializing predict_model()
2025-10-18 21:32:57,142:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7BDCC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A647CF40>)
2025-10-18 21:32:57,142:INFO:Checking exceptions
2025-10-18 21:32:57,142:INFO:Preloading libraries
2025-10-18 21:32:57,142:INFO:Set up data.
2025-10-18 21:32:57,146:INFO:Set up index.
2025-10-18 21:32:59,687:INFO:Initializing predict_model()
2025-10-18 21:32:59,687:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A640C990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6315DA0>)
2025-10-18 21:32:59,687:INFO:Checking exceptions
2025-10-18 21:32:59,687:INFO:Preloading libraries
2025-10-18 21:32:59,688:INFO:Set up data.
2025-10-18 21:32:59,695:INFO:Set up index.
2025-10-18 21:32:59,938:INFO:Initializing predict_model()
2025-10-18 21:32:59,939:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6413750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6162200>)
2025-10-18 21:32:59,939:INFO:Checking exceptions
2025-10-18 21:32:59,939:INFO:Preloading libraries
2025-10-18 21:32:59,939:INFO:Set up data.
2025-10-18 21:32:59,944:INFO:Set up index.
2025-10-18 21:33:01,960:INFO:Initializing predict_model()
2025-10-18 21:33:01,960:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63FCC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A641A5C0>)
2025-10-18 21:33:01,961:INFO:Checking exceptions
2025-10-18 21:33:01,961:INFO:Preloading libraries
2025-10-18 21:33:01,961:INFO:Set up data.
2025-10-18 21:33:01,966:INFO:Set up index.
2025-10-18 21:33:02,694:INFO:Initializing predict_model()
2025-10-18 21:33:02,695:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7BA6D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A63EC2C0>)
2025-10-18 21:33:02,695:INFO:Checking exceptions
2025-10-18 21:33:02,695:INFO:Preloading libraries
2025-10-18 21:33:02,695:INFO:Set up data.
2025-10-18 21:33:02,701:INFO:Set up index.
2025-10-18 21:33:03,332:INFO:Initializing predict_model()
2025-10-18 21:33:03,332:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A640B650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A63EF2E0>)
2025-10-18 21:33:03,332:INFO:Checking exceptions
2025-10-18 21:33:03,333:INFO:Preloading libraries
2025-10-18 21:33:03,334:INFO:Set up data.
2025-10-18 21:33:03,338:INFO:Set up index.
2025-10-18 21:33:14,960:INFO:Initializing predict_model()
2025-10-18 21:33:14,960:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7BDE210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A63EC540>)
2025-10-18 21:33:14,961:INFO:Checking exceptions
2025-10-18 21:33:14,961:INFO:Preloading libraries
2025-10-18 21:33:14,961:INFO:Set up data.
2025-10-18 21:33:14,967:INFO:Set up index.
2025-10-18 21:33:17,760:INFO:Initializing predict_model()
2025-10-18 21:33:17,760:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7B42B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D61300>)
2025-10-18 21:33:17,760:INFO:Checking exceptions
2025-10-18 21:33:17,761:INFO:Preloading libraries
2025-10-18 21:33:17,761:INFO:Set up data.
2025-10-18 21:33:17,766:INFO:Set up index.
2025-10-18 21:33:22,236:INFO:Initializing predict_model()
2025-10-18 21:33:22,236:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7C8FB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A63DE480>)
2025-10-18 21:33:22,236:INFO:Checking exceptions
2025-10-18 21:33:22,236:INFO:Preloading libraries
2025-10-18 21:33:22,236:INFO:Set up data.
2025-10-18 21:33:22,240:INFO:Set up index.
2025-10-18 21:33:23,154:INFO:Initializing predict_model()
2025-10-18 21:33:23,154:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A5E238D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A61BC220>)
2025-10-18 21:33:23,154:INFO:Checking exceptions
2025-10-18 21:33:23,154:INFO:Preloading libraries
2025-10-18 21:33:23,155:INFO:Set up data.
2025-10-18 21:33:23,158:INFO:Set up index.
2025-10-18 21:33:24,756:INFO:Initializing predict_model()
2025-10-18 21:33:24,756:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63D6F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A66C0E00>)
2025-10-18 21:33:24,756:INFO:Checking exceptions
2025-10-18 21:33:24,757:INFO:Preloading libraries
2025-10-18 21:33:24,757:INFO:Set up data.
2025-10-18 21:33:24,760:INFO:Set up index.
2025-10-18 21:33:26,186:INFO:Initializing predict_model()
2025-10-18 21:33:26,186:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63D6350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D616C0>)
2025-10-18 21:33:26,186:INFO:Checking exceptions
2025-10-18 21:33:26,186:INFO:Preloading libraries
2025-10-18 21:33:26,187:INFO:Set up data.
2025-10-18 21:33:26,190:INFO:Set up index.
2025-10-18 21:33:26,782:INFO:Initializing predict_model()
2025-10-18 21:33:26,782:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7C8D610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D61C60>)
2025-10-18 21:33:26,782:INFO:Checking exceptions
2025-10-18 21:33:26,783:INFO:Preloading libraries
2025-10-18 21:33:26,783:INFO:Set up data.
2025-10-18 21:33:26,787:INFO:Set up index.
2025-10-18 21:33:27,309:INFO:Initializing predict_model()
2025-10-18 21:33:27,309:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63829D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D61E40>)
2025-10-18 21:33:27,309:INFO:Checking exceptions
2025-10-18 21:33:27,309:INFO:Preloading libraries
2025-10-18 21:33:27,310:INFO:Set up data.
2025-10-18 21:33:27,313:INFO:Set up index.
2025-10-18 21:33:27,808:INFO:Initializing predict_model()
2025-10-18 21:33:27,808:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A641FDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D61F80>)
2025-10-18 21:33:27,808:INFO:Checking exceptions
2025-10-18 21:33:27,808:INFO:Preloading libraries
2025-10-18 21:33:27,808:INFO:Set up data.
2025-10-18 21:33:27,813:INFO:Set up index.
2025-10-18 21:33:28,291:INFO:Initializing predict_model()
2025-10-18 21:33:28,291:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7BA2B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D61580>)
2025-10-18 21:33:28,291:INFO:Checking exceptions
2025-10-18 21:33:28,292:INFO:Preloading libraries
2025-10-18 21:33:28,292:INFO:Set up data.
2025-10-18 21:33:28,296:INFO:Set up index.
2025-10-18 21:33:28,889:INFO:Initializing predict_model()
2025-10-18 21:33:28,890:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6383C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D62200>)
2025-10-18 21:33:28,890:INFO:Checking exceptions
2025-10-18 21:33:28,890:INFO:Preloading libraries
2025-10-18 21:33:28,890:INFO:Set up data.
2025-10-18 21:33:28,894:INFO:Set up index.
2025-10-18 21:33:29,345:INFO:Initializing predict_model()
2025-10-18 21:33:29,345:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7BDD690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D62980>)
2025-10-18 21:33:29,345:INFO:Checking exceptions
2025-10-18 21:33:29,345:INFO:Preloading libraries
2025-10-18 21:33:29,345:INFO:Set up data.
2025-10-18 21:33:29,351:INFO:Set up index.
2025-10-18 21:33:34,912:INFO:Initializing predict_model()
2025-10-18 21:33:34,913:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6108890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D62D40>)
2025-10-18 21:33:34,913:INFO:Checking exceptions
2025-10-18 21:33:34,913:INFO:Preloading libraries
2025-10-18 21:33:34,915:INFO:Set up data.
2025-10-18 21:33:34,919:INFO:Set up index.
2025-10-18 21:33:35,186:INFO:Initializing predict_model()
2025-10-18 21:33:35,186:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7C7DA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6675BC0>)
2025-10-18 21:33:35,186:INFO:Checking exceptions
2025-10-18 21:33:35,186:INFO:Preloading libraries
2025-10-18 21:33:35,187:INFO:Set up data.
2025-10-18 21:33:35,191:INFO:Set up index.
2025-10-18 21:33:41,236:INFO:Initializing predict_model()
2025-10-18 21:33:41,236:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A5E29610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D61620>)
2025-10-18 21:33:41,236:INFO:Checking exceptions
2025-10-18 21:33:41,237:INFO:Preloading libraries
2025-10-18 21:33:41,237:INFO:Set up data.
2025-10-18 21:33:41,242:INFO:Set up index.
2025-10-18 21:33:41,527:INFO:Initializing predict_model()
2025-10-18 21:33:41,527:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63CA510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A63EEDE0>)
2025-10-18 21:33:41,527:INFO:Checking exceptions
2025-10-18 21:33:41,527:INFO:Preloading libraries
2025-10-18 21:33:41,527:INFO:Set up data.
2025-10-18 21:33:41,531:INFO:Set up index.
2025-10-18 21:33:53,473:INFO:Initializing predict_model()
2025-10-18 21:33:53,474:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63CB590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D62B60>)
2025-10-18 21:33:53,474:INFO:Checking exceptions
2025-10-18 21:33:53,474:INFO:Preloading libraries
2025-10-18 21:33:53,474:INFO:Set up data.
2025-10-18 21:33:53,478:INFO:Set up index.
2025-10-18 21:33:55,473:INFO:Initializing predict_model()
2025-10-18 21:33:55,474:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7C8D690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D62700>)
2025-10-18 21:33:55,474:INFO:Checking exceptions
2025-10-18 21:33:55,474:INFO:Preloading libraries
2025-10-18 21:33:55,474:INFO:Set up data.
2025-10-18 21:33:55,477:INFO:Set up index.
2025-10-18 21:33:56,496:INFO:Initializing predict_model()
2025-10-18 21:33:56,496:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7BA6A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D62F20>)
2025-10-18 21:33:56,497:INFO:Checking exceptions
2025-10-18 21:33:56,497:INFO:Preloading libraries
2025-10-18 21:33:56,498:INFO:Set up data.
2025-10-18 21:33:56,503:INFO:Set up index.
2025-10-18 21:34:02,288:INFO:Initializing predict_model()
2025-10-18 21:34:02,288:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63C86D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D634C0>)
2025-10-18 21:34:02,289:INFO:Checking exceptions
2025-10-18 21:34:02,289:INFO:Preloading libraries
2025-10-18 21:34:02,289:INFO:Set up data.
2025-10-18 21:34:02,293:INFO:Set up index.
2025-10-18 21:34:09,988:INFO:Initializing predict_model()
2025-10-18 21:34:09,988:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63C99D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D62A20>)
2025-10-18 21:34:09,988:INFO:Checking exceptions
2025-10-18 21:34:09,988:INFO:Preloading libraries
2025-10-18 21:34:09,988:INFO:Set up data.
2025-10-18 21:34:09,995:INFO:Set up index.
2025-10-18 21:37:05,257:INFO:Initializing predict_model()
2025-10-18 21:37:05,260:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A641C310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D63100>)
2025-10-18 21:37:05,260:INFO:Checking exceptions
2025-10-18 21:37:05,261:INFO:Preloading libraries
2025-10-18 21:37:05,264:INFO:Set up data.
2025-10-18 21:37:05,268:INFO:Set up index.
2025-10-18 21:37:05,616:INFO:Initializing predict_model()
2025-10-18 21:37:05,616:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7C67DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6646980>)
2025-10-18 21:37:05,616:INFO:Checking exceptions
2025-10-18 21:37:05,616:INFO:Preloading libraries
2025-10-18 21:37:05,617:INFO:Set up data.
2025-10-18 21:37:05,620:INFO:Set up index.
2025-10-18 21:37:31,039:INFO:Initializing predict_model()
2025-10-18 21:37:31,039:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A61C3F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D61620>)
2025-10-18 21:37:31,040:INFO:Checking exceptions
2025-10-18 21:37:31,040:INFO:Preloading libraries
2025-10-18 21:37:31,040:INFO:Set up data.
2025-10-18 21:37:31,099:INFO:Set up index.
2025-10-18 21:37:31,362:INFO:Initializing predict_model()
2025-10-18 21:37:31,362:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6381AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A66BA2A0>)
2025-10-18 21:37:31,363:INFO:Checking exceptions
2025-10-18 21:37:31,363:INFO:Preloading libraries
2025-10-18 21:37:31,363:INFO:Set up data.
2025-10-18 21:37:31,366:INFO:Set up index.
2025-10-18 21:37:33,570:INFO:Initializing predict_model()
2025-10-18 21:37:33,570:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63C2710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7D62E80>)
2025-10-18 21:37:33,571:INFO:Checking exceptions
2025-10-18 21:37:33,571:INFO:Preloading libraries
2025-10-18 21:37:33,571:INFO:Set up data.
2025-10-18 21:37:33,574:INFO:Set up index.
2025-10-18 21:37:33,831:INFO:Initializing predict_model()
2025-10-18 21:37:33,831:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2979B1190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6419800>)
2025-10-18 21:37:33,831:INFO:Checking exceptions
2025-10-18 21:37:33,831:INFO:Preloading libraries
2025-10-18 21:37:33,831:INFO:Set up data.
2025-10-18 21:37:33,835:INFO:Set up index.
2025-10-18 21:37:38,859:INFO:Initializing predict_model()
2025-10-18 21:37:38,860:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63FD390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A66B8F40>)
2025-10-18 21:37:38,860:INFO:Checking exceptions
2025-10-18 21:37:38,860:INFO:Preloading libraries
2025-10-18 21:37:38,861:INFO:Set up data.
2025-10-18 21:37:38,866:INFO:Set up index.
2025-10-18 21:37:39,138:INFO:Initializing predict_model()
2025-10-18 21:37:39,139:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A61B4CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B29AA3B100>)
2025-10-18 21:37:39,139:INFO:Checking exceptions
2025-10-18 21:37:39,139:INFO:Preloading libraries
2025-10-18 21:37:39,139:INFO:Set up data.
2025-10-18 21:37:39,144:INFO:Set up index.
2025-10-18 21:37:44,608:INFO:Initializing predict_model()
2025-10-18 21:37:44,609:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A619A1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A66D40E0>)
2025-10-18 21:37:44,609:INFO:Checking exceptions
2025-10-18 21:37:44,609:INFO:Preloading libraries
2025-10-18 21:37:44,610:INFO:Set up data.
2025-10-18 21:37:44,615:INFO:Set up index.
2025-10-18 21:37:46,506:INFO:Initializing predict_model()
2025-10-18 21:37:46,506:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63A0E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A66D4040>)
2025-10-18 21:37:46,506:INFO:Checking exceptions
2025-10-18 21:37:46,506:INFO:Preloading libraries
2025-10-18 21:37:46,506:INFO:Set up data.
2025-10-18 21:37:46,509:INFO:Set up index.
2025-10-18 21:37:46,786:INFO:Initializing predict_model()
2025-10-18 21:37:46,786:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A61C3250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A666B4C0>)
2025-10-18 21:37:46,787:INFO:Checking exceptions
2025-10-18 21:37:46,787:INFO:Preloading libraries
2025-10-18 21:37:46,787:INFO:Set up data.
2025-10-18 21:37:46,790:INFO:Set up index.
2025-10-18 21:37:50,001:INFO:Initializing predict_model()
2025-10-18 21:37:50,001:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A61C0610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DEA840>)
2025-10-18 21:37:50,001:INFO:Checking exceptions
2025-10-18 21:37:50,002:INFO:Preloading libraries
2025-10-18 21:37:50,002:INFO:Set up data.
2025-10-18 21:37:50,005:INFO:Set up index.
2025-10-18 21:37:52,959:INFO:Initializing predict_model()
2025-10-18 21:37:52,960:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63D7150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A66663E0>)
2025-10-18 21:37:52,960:INFO:Checking exceptions
2025-10-18 21:37:52,960:INFO:Preloading libraries
2025-10-18 21:37:52,960:INFO:Set up data.
2025-10-18 21:37:52,964:INFO:Set up index.
2025-10-18 21:37:53,220:INFO:Initializing predict_model()
2025-10-18 21:37:53,220:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63C4790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A66F3600>)
2025-10-18 21:37:53,220:INFO:Checking exceptions
2025-10-18 21:37:53,220:INFO:Preloading libraries
2025-10-18 21:37:53,221:INFO:Set up data.
2025-10-18 21:37:53,224:INFO:Set up index.
2025-10-18 21:38:00,269:INFO:Initializing predict_model()
2025-10-18 21:38:00,270:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6101E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DE9120>)
2025-10-18 21:38:00,270:INFO:Checking exceptions
2025-10-18 21:38:00,270:INFO:Preloading libraries
2025-10-18 21:38:00,270:INFO:Set up data.
2025-10-18 21:38:00,275:INFO:Set up index.
2025-10-18 21:38:00,579:INFO:Initializing predict_model()
2025-10-18 21:38:00,579:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6383F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A602F560>)
2025-10-18 21:38:00,580:INFO:Checking exceptions
2025-10-18 21:38:00,580:INFO:Preloading libraries
2025-10-18 21:38:00,580:INFO:Set up data.
2025-10-18 21:38:00,584:INFO:Set up index.
2025-10-18 21:38:02,464:INFO:Initializing predict_model()
2025-10-18 21:38:02,464:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6103DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DE91C0>)
2025-10-18 21:38:02,464:INFO:Checking exceptions
2025-10-18 21:38:02,464:INFO:Preloading libraries
2025-10-18 21:38:02,465:INFO:Set up data.
2025-10-18 21:38:02,468:INFO:Set up index.
2025-10-18 21:38:03,049:INFO:Initializing predict_model()
2025-10-18 21:38:03,049:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63C1C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DE9C60>)
2025-10-18 21:38:03,049:INFO:Checking exceptions
2025-10-18 21:38:03,049:INFO:Preloading libraries
2025-10-18 21:38:03,050:INFO:Set up data.
2025-10-18 21:38:03,053:INFO:Set up index.
2025-10-18 21:38:05,782:INFO:Initializing predict_model()
2025-10-18 21:38:05,782:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6193410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6686C00>)
2025-10-18 21:38:05,782:INFO:Checking exceptions
2025-10-18 21:38:05,783:INFO:Preloading libraries
2025-10-18 21:38:05,783:INFO:Set up data.
2025-10-18 21:38:05,786:INFO:Set up index.
2025-10-18 21:38:06,875:INFO:Initializing predict_model()
2025-10-18 21:38:06,875:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6413AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A64DAA20>)
2025-10-18 21:38:06,875:INFO:Checking exceptions
2025-10-18 21:38:06,875:INFO:Preloading libraries
2025-10-18 21:38:06,875:INFO:Set up data.
2025-10-18 21:38:06,880:INFO:Set up index.
2025-10-18 21:38:08,898:INFO:Initializing predict_model()
2025-10-18 21:38:08,898:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6101710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DE93A0>)
2025-10-18 21:38:08,898:INFO:Checking exceptions
2025-10-18 21:38:08,898:INFO:Preloading libraries
2025-10-18 21:38:08,899:INFO:Set up data.
2025-10-18 21:38:08,903:INFO:Set up index.
2025-10-18 21:38:09,170:INFO:Initializing predict_model()
2025-10-18 21:38:09,170:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A61B4590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6419760>)
2025-10-18 21:38:09,170:INFO:Checking exceptions
2025-10-18 21:38:09,170:INFO:Preloading libraries
2025-10-18 21:38:09,171:INFO:Set up data.
2025-10-18 21:38:09,175:INFO:Set up index.
2025-10-18 21:38:11,087:INFO:Initializing predict_model()
2025-10-18 21:38:11,087:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A64D78D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DE8F40>)
2025-10-18 21:38:11,087:INFO:Checking exceptions
2025-10-18 21:38:11,088:INFO:Preloading libraries
2025-10-18 21:38:11,088:INFO:Set up data.
2025-10-18 21:38:11,095:INFO:Set up index.
2025-10-18 21:38:11,385:INFO:Initializing predict_model()
2025-10-18 21:38:11,385:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A61B7F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6539800>)
2025-10-18 21:38:11,386:INFO:Checking exceptions
2025-10-18 21:38:11,386:INFO:Preloading libraries
2025-10-18 21:38:11,386:INFO:Set up data.
2025-10-18 21:38:11,390:INFO:Set up index.
2025-10-18 21:38:13,331:INFO:Initializing predict_model()
2025-10-18 21:38:13,331:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6396B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DEB880>)
2025-10-18 21:38:13,332:INFO:Checking exceptions
2025-10-18 21:38:13,332:INFO:Preloading libraries
2025-10-18 21:38:13,333:INFO:Set up data.
2025-10-18 21:38:13,338:INFO:Set up index.
2025-10-18 21:38:13,601:INFO:Initializing predict_model()
2025-10-18 21:38:13,601:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A7BA38D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6419080>)
2025-10-18 21:38:13,601:INFO:Checking exceptions
2025-10-18 21:38:13,601:INFO:Preloading libraries
2025-10-18 21:38:13,602:INFO:Set up data.
2025-10-18 21:38:13,605:INFO:Set up index.
2025-10-18 21:38:15,495:INFO:Initializing predict_model()
2025-10-18 21:38:15,495:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A640C890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DE9800>)
2025-10-18 21:38:15,495:INFO:Checking exceptions
2025-10-18 21:38:15,495:INFO:Preloading libraries
2025-10-18 21:38:15,496:INFO:Set up data.
2025-10-18 21:38:15,500:INFO:Set up index.
2025-10-18 21:38:15,749:INFO:Initializing predict_model()
2025-10-18 21:38:15,749:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6A42710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A64D9D00>)
2025-10-18 21:38:15,749:INFO:Checking exceptions
2025-10-18 21:38:15,749:INFO:Preloading libraries
2025-10-18 21:38:15,749:INFO:Set up data.
2025-10-18 21:38:15,752:INFO:Set up index.
2025-10-18 21:38:18,246:INFO:Initializing predict_model()
2025-10-18 21:38:18,247:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6193F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A64DA0C0>)
2025-10-18 21:38:18,247:INFO:Checking exceptions
2025-10-18 21:38:18,247:INFO:Preloading libraries
2025-10-18 21:38:18,247:INFO:Set up data.
2025-10-18 21:38:18,250:INFO:Set up index.
2025-10-18 21:38:18,551:INFO:Initializing predict_model()
2025-10-18 21:38:18,551:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A61AE850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A6573A60>)
2025-10-18 21:38:18,551:INFO:Checking exceptions
2025-10-18 21:38:18,551:INFO:Preloading libraries
2025-10-18 21:38:18,552:INFO:Set up data.
2025-10-18 21:38:18,555:INFO:Set up index.
2025-10-18 21:38:19,017:INFO:Initializing predict_model()
2025-10-18 21:38:19,017:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A6100B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A666BC40>)
2025-10-18 21:38:19,017:INFO:Checking exceptions
2025-10-18 21:38:19,017:INFO:Preloading libraries
2025-10-18 21:38:19,017:INFO:Set up data.
2025-10-18 21:38:19,021:INFO:Set up index.
2025-10-18 21:38:19,339:INFO:Initializing predict_model()
2025-10-18 21:38:19,340:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63C3810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A64D8680>)
2025-10-18 21:38:19,340:INFO:Checking exceptions
2025-10-18 21:38:19,340:INFO:Preloading libraries
2025-10-18 21:38:19,340:INFO:Set up data.
2025-10-18 21:38:19,345:INFO:Set up index.
2025-10-18 21:38:22,026:INFO:Initializing predict_model()
2025-10-18 21:38:22,026:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A61C0E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A7DEA980>)
2025-10-18 21:38:22,026:INFO:Checking exceptions
2025-10-18 21:38:22,026:INFO:Preloading libraries
2025-10-18 21:38:22,026:INFO:Set up data.
2025-10-18 21:38:22,030:INFO:Set up index.
2025-10-18 21:38:22,296:INFO:Initializing predict_model()
2025-10-18 21:38:22,296:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B2A63B4C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B2A666A340>)
2025-10-18 21:38:22,296:INFO:Checking exceptions
2025-10-18 21:38:22,296:INFO:Preloading libraries
2025-10-18 21:38:22,296:INFO:Set up data.
2025-10-18 21:38:22,300:INFO:Set up index.
2025-10-19 18:04:12,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-19 18:04:12,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-19 18:04:12,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-19 18:04:12,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-19 18:04:15,055:INFO:Initializing load_model()
2025-10-19 18:04:15,055:INFO:load_model(model_name=fin, platform=None, authentication=None, verbose=True)
2025-10-19 18:04:18,552:INFO:Initializing predict_model()
2025-10-19 18:04:18,554:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000231913DF650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023188E01F80>)
2025-10-19 18:04:18,555:INFO:Checking exceptions
2025-10-19 18:04:18,556:INFO:Preloading libraries
2025-10-19 18:04:18,564:INFO:Set up data.
2025-10-19 18:04:18,582:INFO:Set up index.
2025-10-19 18:04:30,516:INFO:Initializing predict_model()
2025-10-19 18:04:30,516:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002319335BD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002319122E520>)
2025-10-19 18:04:30,517:INFO:Checking exceptions
2025-10-19 18:04:30,517:INFO:Preloading libraries
2025-10-19 18:04:30,517:INFO:Set up data.
2025-10-19 18:04:30,527:INFO:Set up index.
2025-10-19 18:04:31,075:INFO:Initializing predict_model()
2025-10-19 18:04:31,075:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002319336AA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002319122E2A0>)
2025-10-19 18:04:31,075:INFO:Checking exceptions
2025-10-19 18:04:31,075:INFO:Preloading libraries
2025-10-19 18:04:31,076:INFO:Set up data.
2025-10-19 18:04:31,080:INFO:Set up index.
2025-10-19 18:04:31,583:INFO:Initializing predict_model()
2025-10-19 18:04:31,584:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002319336AD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023193496CA0>)
2025-10-19 18:04:31,584:INFO:Checking exceptions
2025-10-19 18:04:31,584:INFO:Preloading libraries
2025-10-19 18:04:31,588:INFO:Set up data.
2025-10-19 18:04:31,594:INFO:Set up index.
2025-10-19 18:04:41,326:INFO:Initializing predict_model()
2025-10-19 18:04:41,326:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002319335F650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023193497D80>)
2025-10-19 18:04:41,327:INFO:Checking exceptions
2025-10-19 18:04:41,327:INFO:Preloading libraries
2025-10-19 18:04:41,327:INFO:Set up data.
2025-10-19 18:04:41,340:INFO:Set up index.
2025-10-19 18:11:33,354:INFO:Initializing predict_model()
2025-10-19 18:11:33,355:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023193341E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000231934360C0>)
2025-10-19 18:11:33,355:INFO:Checking exceptions
2025-10-19 18:11:33,355:INFO:Preloading libraries
2025-10-19 18:11:33,355:INFO:Set up data.
2025-10-19 18:11:33,361:INFO:Set up index.
2025-10-19 18:11:36,571:INFO:Initializing predict_model()
2025-10-19 18:11:36,572:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000231914EA9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023193437240>)
2025-10-19 18:11:36,572:INFO:Checking exceptions
2025-10-19 18:11:36,572:INFO:Preloading libraries
2025-10-19 18:11:36,572:INFO:Set up data.
2025-10-19 18:11:36,576:INFO:Set up index.
2025-10-19 18:11:37,191:INFO:Initializing predict_model()
2025-10-19 18:11:37,192:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002319108F0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023193440900>)
2025-10-19 18:11:37,192:INFO:Checking exceptions
2025-10-19 18:11:37,192:INFO:Preloading libraries
2025-10-19 18:11:37,194:INFO:Set up data.
2025-10-19 18:11:37,202:INFO:Set up index.
2025-10-19 18:16:37,190:INFO:Initializing load_model()
2025-10-19 18:16:37,190:INFO:load_model(model_name=fin, platform=None, authentication=None, verbose=False)
2025-10-19 18:16:37,326:INFO:Initializing predict_model()
2025-10-19 18:16:37,326:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023191056A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002319166F2E0>)
2025-10-19 18:16:37,326:INFO:Checking exceptions
2025-10-19 18:16:37,326:INFO:Preloading libraries
2025-10-19 18:16:37,328:INFO:Set up data.
2025-10-19 18:16:37,332:INFO:Set up index.
2025-10-19 18:16:40,562:INFO:Initializing predict_model()
2025-10-19 18:16:40,564:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000231913F4890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023193461C60>)
2025-10-19 18:16:40,565:INFO:Checking exceptions
2025-10-19 18:16:40,565:INFO:Preloading libraries
2025-10-19 18:16:40,566:INFO:Set up data.
2025-10-19 18:16:40,569:INFO:Set up index.
2025-10-19 18:16:41,755:INFO:Initializing predict_model()
2025-10-19 18:16:41,755:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023193352690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023193463C40>)
2025-10-19 18:16:41,755:INFO:Checking exceptions
2025-10-19 18:16:41,755:INFO:Preloading libraries
2025-10-19 18:16:41,755:INFO:Set up data.
2025-10-19 18:16:41,758:INFO:Set up index.
2025-10-19 18:18:00,206:INFO:Initializing predict_model()
2025-10-19 18:18:00,207:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002318DFB7E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000231934C9EE0>)
2025-10-19 18:18:00,207:INFO:Checking exceptions
2025-10-19 18:18:00,207:INFO:Preloading libraries
2025-10-19 18:18:00,208:INFO:Set up data.
2025-10-19 18:18:00,215:INFO:Set up index.
2025-10-19 18:19:14,107:INFO:Initializing predict_model()
2025-10-19 18:19:14,107:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023191415110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023193435800>)
2025-10-19 18:19:14,107:INFO:Checking exceptions
2025-10-19 18:19:14,107:INFO:Preloading libraries
2025-10-19 18:19:14,113:INFO:Set up data.
2025-10-19 18:19:14,118:INFO:Set up index.
2025-10-19 18:19:52,585:INFO:Initializing predict_model()
2025-10-19 18:19:52,585:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000231933FB090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000231914EF240>)
2025-10-19 18:19:52,585:INFO:Checking exceptions
2025-10-19 18:19:52,585:INFO:Preloading libraries
2025-10-19 18:19:52,585:INFO:Set up data.
2025-10-19 18:19:52,588:INFO:Set up index.
2025-10-19 18:20:00,201:INFO:Initializing predict_model()
2025-10-19 18:20:00,201:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023193526850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002319354C2C0>)
2025-10-19 18:20:00,201:INFO:Checking exceptions
2025-10-19 18:20:00,201:INFO:Preloading libraries
2025-10-19 18:20:00,202:INFO:Set up data.
2025-10-19 18:20:00,205:INFO:Set up index.
2025-10-19 18:20:00,699:INFO:Initializing predict_model()
2025-10-19 18:20:00,699:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023191458C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=9, min_impurity_decrease=0.1,
                                       min_samples_leaf=4, min_samples_split=7,
                                       n_jobs=1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002319354D080>)
2025-10-19 18:20:00,699:INFO:Checking exceptions
2025-10-19 18:20:00,700:INFO:Preloading libraries
2025-10-19 18:20:00,700:INFO:Set up data.
2025-10-19 18:20:00,706:INFO:Set up index.
